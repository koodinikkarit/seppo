// Code generated by protoc-gen-go.
// source: song_database.proto
// DO NOT EDIT!

package SeppoService

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type SongDatabase struct {
	Id      uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name    string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Version uint64 `protobuf:"varint,3,opt,name=version" json:"version,omitempty"`
}

func (m *SongDatabase) Reset()                    { *m = SongDatabase{} }
func (m *SongDatabase) String() string            { return proto.CompactTextString(m) }
func (*SongDatabase) ProtoMessage()               {}
func (*SongDatabase) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{0} }

func (m *SongDatabase) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *SongDatabase) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SongDatabase) GetVersion() uint64 {
	if m != nil {
		return m.Version
	}
	return 0
}

type SongDatabaseEdge struct {
	Node   *SongDatabase `protobuf:"bytes,1,opt,name=node" json:"node,omitempty"`
	Cursor uint32        `protobuf:"varint,2,opt,name=cursor" json:"cursor,omitempty"`
}

func (m *SongDatabaseEdge) Reset()                    { *m = SongDatabaseEdge{} }
func (m *SongDatabaseEdge) String() string            { return proto.CompactTextString(m) }
func (*SongDatabaseEdge) ProtoMessage()               {}
func (*SongDatabaseEdge) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{1} }

func (m *SongDatabaseEdge) GetNode() *SongDatabase {
	if m != nil {
		return m.Node
	}
	return nil
}

func (m *SongDatabaseEdge) GetCursor() uint32 {
	if m != nil {
		return m.Cursor
	}
	return 0
}

type SongDatabasesConnection struct {
	Edges      []*SongDatabaseEdge `protobuf:"bytes,1,rep,name=edges" json:"edges,omitempty"`
	TotalCount uint32              `protobuf:"varint,3,opt,name=totalCount" json:"totalCount,omitempty"`
}

func (m *SongDatabasesConnection) Reset()                    { *m = SongDatabasesConnection{} }
func (m *SongDatabasesConnection) String() string            { return proto.CompactTextString(m) }
func (*SongDatabasesConnection) ProtoMessage()               {}
func (*SongDatabasesConnection) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{2} }

func (m *SongDatabasesConnection) GetEdges() []*SongDatabaseEdge {
	if m != nil {
		return m.Edges
	}
	return nil
}

func (m *SongDatabasesConnection) GetTotalCount() uint32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

type FetchSongDatabasesRequest struct {
	After       uint32 `protobuf:"varint,1,opt,name=after" json:"after,omitempty"`
	Before      uint32 `protobuf:"varint,2,opt,name=before" json:"before,omitempty"`
	First       uint32 `protobuf:"varint,3,opt,name=first" json:"first,omitempty"`
	Last        uint32 `protobuf:"varint,4,opt,name=last" json:"last,omitempty"`
	SearchWord  string `protobuf:"bytes,5,opt,name=searchWord" json:"searchWord,omitempty"`
	VariationId uint32 `protobuf:"varint,6,opt,name=variationId" json:"variationId,omitempty"`
}

func (m *FetchSongDatabasesRequest) Reset()                    { *m = FetchSongDatabasesRequest{} }
func (m *FetchSongDatabasesRequest) String() string            { return proto.CompactTextString(m) }
func (*FetchSongDatabasesRequest) ProtoMessage()               {}
func (*FetchSongDatabasesRequest) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{3} }

func (m *FetchSongDatabasesRequest) GetAfter() uint32 {
	if m != nil {
		return m.After
	}
	return 0
}

func (m *FetchSongDatabasesRequest) GetBefore() uint32 {
	if m != nil {
		return m.Before
	}
	return 0
}

func (m *FetchSongDatabasesRequest) GetFirst() uint32 {
	if m != nil {
		return m.First
	}
	return 0
}

func (m *FetchSongDatabasesRequest) GetLast() uint32 {
	if m != nil {
		return m.Last
	}
	return 0
}

func (m *FetchSongDatabasesRequest) GetSearchWord() string {
	if m != nil {
		return m.SearchWord
	}
	return ""
}

func (m *FetchSongDatabasesRequest) GetVariationId() uint32 {
	if m != nil {
		return m.VariationId
	}
	return 0
}

type FetchSongDatabaseByIdRequest struct {
	SongDatabaseIds []uint32 `protobuf:"varint,1,rep,packed,name=songDatabaseIds" json:"songDatabaseIds,omitempty"`
}

func (m *FetchSongDatabaseByIdRequest) Reset()                    { *m = FetchSongDatabaseByIdRequest{} }
func (m *FetchSongDatabaseByIdRequest) String() string            { return proto.CompactTextString(m) }
func (*FetchSongDatabaseByIdRequest) ProtoMessage()               {}
func (*FetchSongDatabaseByIdRequest) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{4} }

func (m *FetchSongDatabaseByIdRequest) GetSongDatabaseIds() []uint32 {
	if m != nil {
		return m.SongDatabaseIds
	}
	return nil
}

type FetchSongDatabaseByIdResponse struct {
	SongDatabases []*SongDatabase `protobuf:"bytes,1,rep,name=songDatabases" json:"songDatabases,omitempty"`
}

func (m *FetchSongDatabaseByIdResponse) Reset()                    { *m = FetchSongDatabaseByIdResponse{} }
func (m *FetchSongDatabaseByIdResponse) String() string            { return proto.CompactTextString(m) }
func (*FetchSongDatabaseByIdResponse) ProtoMessage()               {}
func (*FetchSongDatabaseByIdResponse) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{5} }

func (m *FetchSongDatabaseByIdResponse) GetSongDatabases() []*SongDatabase {
	if m != nil {
		return m.SongDatabases
	}
	return nil
}

type CreateSongDatabaseRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *CreateSongDatabaseRequest) Reset()                    { *m = CreateSongDatabaseRequest{} }
func (m *CreateSongDatabaseRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateSongDatabaseRequest) ProtoMessage()               {}
func (*CreateSongDatabaseRequest) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{6} }

func (m *CreateSongDatabaseRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type CreateSongDatabaseResponse struct {
	SongDatabase *SongDatabase `protobuf:"bytes,1,opt,name=songDatabase" json:"songDatabase,omitempty"`
}

func (m *CreateSongDatabaseResponse) Reset()                    { *m = CreateSongDatabaseResponse{} }
func (m *CreateSongDatabaseResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateSongDatabaseResponse) ProtoMessage()               {}
func (*CreateSongDatabaseResponse) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{7} }

func (m *CreateSongDatabaseResponse) GetSongDatabase() *SongDatabase {
	if m != nil {
		return m.SongDatabase
	}
	return nil
}

type EditSongDatabaseRequest struct {
	SongDatabaseId uint32 `protobuf:"varint,1,opt,name=songDatabaseId" json:"songDatabaseId,omitempty"`
	Name           string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *EditSongDatabaseRequest) Reset()                    { *m = EditSongDatabaseRequest{} }
func (m *EditSongDatabaseRequest) String() string            { return proto.CompactTextString(m) }
func (*EditSongDatabaseRequest) ProtoMessage()               {}
func (*EditSongDatabaseRequest) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{8} }

func (m *EditSongDatabaseRequest) GetSongDatabaseId() uint32 {
	if m != nil {
		return m.SongDatabaseId
	}
	return 0
}

func (m *EditSongDatabaseRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type EditSongDatabaseResponse struct {
	SongDatabase *SongDatabase `protobuf:"bytes,1,opt,name=songDatabase" json:"songDatabase,omitempty"`
}

func (m *EditSongDatabaseResponse) Reset()                    { *m = EditSongDatabaseResponse{} }
func (m *EditSongDatabaseResponse) String() string            { return proto.CompactTextString(m) }
func (*EditSongDatabaseResponse) ProtoMessage()               {}
func (*EditSongDatabaseResponse) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{9} }

func (m *EditSongDatabaseResponse) GetSongDatabase() *SongDatabase {
	if m != nil {
		return m.SongDatabase
	}
	return nil
}

type RemoveSongDatabaseRequest struct {
	SongDatabaseId uint32 `protobuf:"varint,1,opt,name=songDatabaseId" json:"songDatabaseId,omitempty"`
}

func (m *RemoveSongDatabaseRequest) Reset()                    { *m = RemoveSongDatabaseRequest{} }
func (m *RemoveSongDatabaseRequest) String() string            { return proto.CompactTextString(m) }
func (*RemoveSongDatabaseRequest) ProtoMessage()               {}
func (*RemoveSongDatabaseRequest) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{10} }

func (m *RemoveSongDatabaseRequest) GetSongDatabaseId() uint32 {
	if m != nil {
		return m.SongDatabaseId
	}
	return 0
}

type RemoveSongDatabaseResponse struct {
}

func (m *RemoveSongDatabaseResponse) Reset()                    { *m = RemoveSongDatabaseResponse{} }
func (m *RemoveSongDatabaseResponse) String() string            { return proto.CompactTextString(m) }
func (*RemoveSongDatabaseResponse) ProtoMessage()               {}
func (*RemoveSongDatabaseResponse) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{11} }

func init() {
	proto.RegisterType((*SongDatabase)(nil), "SeppoService.SongDatabase")
	proto.RegisterType((*SongDatabaseEdge)(nil), "SeppoService.SongDatabaseEdge")
	proto.RegisterType((*SongDatabasesConnection)(nil), "SeppoService.SongDatabasesConnection")
	proto.RegisterType((*FetchSongDatabasesRequest)(nil), "SeppoService.FetchSongDatabasesRequest")
	proto.RegisterType((*FetchSongDatabaseByIdRequest)(nil), "SeppoService.FetchSongDatabaseByIdRequest")
	proto.RegisterType((*FetchSongDatabaseByIdResponse)(nil), "SeppoService.FetchSongDatabaseByIdResponse")
	proto.RegisterType((*CreateSongDatabaseRequest)(nil), "SeppoService.CreateSongDatabaseRequest")
	proto.RegisterType((*CreateSongDatabaseResponse)(nil), "SeppoService.CreateSongDatabaseResponse")
	proto.RegisterType((*EditSongDatabaseRequest)(nil), "SeppoService.EditSongDatabaseRequest")
	proto.RegisterType((*EditSongDatabaseResponse)(nil), "SeppoService.EditSongDatabaseResponse")
	proto.RegisterType((*RemoveSongDatabaseRequest)(nil), "SeppoService.RemoveSongDatabaseRequest")
	proto.RegisterType((*RemoveSongDatabaseResponse)(nil), "SeppoService.RemoveSongDatabaseResponse")
}

func init() { proto.RegisterFile("song_database.proto", fileDescriptor7) }

var fileDescriptor7 = []byte{
	// 456 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x94, 0x51, 0x6b, 0x13, 0x41,
	0x10, 0xc7, 0xb9, 0x34, 0x89, 0x38, 0x49, 0xaa, 0xac, 0x62, 0x37, 0xa1, 0x2d, 0xc7, 0x3e, 0xc8,
	0x3d, 0x45, 0xa8, 0x3e, 0x8b, 0x18, 0x2b, 0x06, 0x7c, 0xda, 0x20, 0x42, 0x11, 0xca, 0xe6, 0x76,
	0x92, 0x1e, 0xb4, 0x3b, 0x71, 0x77, 0x13, 0xf0, 0x83, 0xf9, 0xfd, 0xe4, 0xf6, 0xee, 0x74, 0xaf,
	0x4d, 0x45, 0xb0, 0x6f, 0x3b, 0xb3, 0xff, 0x99, 0xf9, 0xed, 0xcc, 0xdc, 0xc1, 0x33, 0x47, 0x66,
	0x7d, 0xa9, 0x95, 0x57, 0x4b, 0xe5, 0x70, 0xba, 0xb1, 0xe4, 0x89, 0x0d, 0x17, 0xb8, 0xd9, 0xd0,
	0x02, 0xed, 0xae, 0xc8, 0x71, 0x72, 0xd2, 0x92, 0x5c, 0xee, 0x94, 0x2d, 0x94, 0x2f, 0xc8, 0x54,
	0x62, 0xf1, 0x19, 0x86, 0x0b, 0x32, 0xeb, 0x0f, 0xf5, 0x3d, 0x3b, 0x84, 0x4e, 0xa1, 0x79, 0x92,
	0x26, 0xd9, 0x48, 0x76, 0x0a, 0xcd, 0x18, 0x74, 0x8d, 0xba, 0x41, 0xde, 0x49, 0x93, 0xec, 0xb1,
	0x0c, 0x67, 0xc6, 0xe1, 0xd1, 0x0e, 0xad, 0x2b, 0xc8, 0xf0, 0x83, 0x34, 0xc9, 0xba, 0xb2, 0x31,
	0xc5, 0x05, 0x3c, 0x8d, 0xb3, 0x9d, 0xeb, 0x35, 0xb2, 0x29, 0x74, 0x0d, 0x69, 0x0c, 0x39, 0x07,
	0x67, 0x93, 0x69, 0x4c, 0x37, 0x8d, 0xd5, 0x32, 0xe8, 0xd8, 0x0b, 0xe8, 0xe7, 0x5b, 0xeb, 0xc8,
	0x86, 0x9a, 0x23, 0x59, 0x5b, 0x82, 0xe0, 0x28, 0x56, 0xbb, 0x19, 0x19, 0x83, 0x79, 0xf9, 0x14,
	0xf6, 0x06, 0x7a, 0xa8, 0xd7, 0xe8, 0x78, 0x92, 0x1e, 0x64, 0x83, 0xb3, 0xd3, 0xfb, 0x6b, 0x94,
	0x44, 0xb2, 0x12, 0xb3, 0x53, 0x00, 0x4f, 0x5e, 0x5d, 0xcf, 0x68, 0x6b, 0x7c, 0x78, 0xc9, 0x48,
	0x46, 0x1e, 0xf1, 0x33, 0x81, 0xf1, 0x47, 0xf4, 0xf9, 0x55, 0xab, 0xac, 0xc4, 0xef, 0x5b, 0x74,
	0x9e, 0x3d, 0x87, 0x9e, 0x5a, 0x79, 0xb4, 0x75, 0xaf, 0x2a, 0xa3, 0x84, 0x5f, 0xe2, 0x8a, 0x2c,
	0x36, 0xf0, 0x95, 0x55, 0xaa, 0x57, 0x85, 0x75, 0x4d, 0x99, 0xca, 0x28, 0x9b, 0x7b, 0xad, 0x9c,
	0xe7, 0xdd, 0xe0, 0x0c, 0xe7, 0x92, 0xca, 0xa1, 0xb2, 0xf9, 0xd5, 0x57, 0xb2, 0x9a, 0xf7, 0x42,
	0xdb, 0x23, 0x0f, 0x4b, 0x61, 0xf0, 0x7b, 0x86, 0x73, 0xcd, 0xfb, 0x21, 0x34, 0x76, 0x89, 0x4f,
	0x70, 0x7c, 0x07, 0xfb, 0xfd, 0x8f, 0xb9, 0x6e, 0xc8, 0x33, 0x78, 0xe2, 0xa2, 0xab, 0xb9, 0xae,
	0xfa, 0x36, 0x92, 0xb7, 0xdd, 0x42, 0xc1, 0xc9, 0x3d, 0x99, 0xdc, 0x86, 0x8c, 0x43, 0xf6, 0x0e,
	0x46, 0x71, 0x4c, 0x33, 0x80, 0xbf, 0x0d, 0xb9, 0x1d, 0x20, 0x5e, 0xc1, 0x78, 0x66, 0x51, 0x79,
	0x6c, 0x89, 0x6a, 0xd2, 0x66, 0xf9, 0x92, 0x3f, 0xcb, 0x27, 0xbe, 0xc1, 0x64, 0x5f, 0x40, 0x0d,
	0xf4, 0x16, 0x86, 0x71, 0xfe, 0x7f, 0x58, 0xba, 0x96, 0x5e, 0x7c, 0x81, 0xa3, 0x73, 0x5d, 0xf8,
	0x7d, 0x30, 0x2f, 0xe1, 0xb0, 0xdd, 0x9f, 0x7a, 0xf2, 0xb7, 0xbc, 0xfb, 0xbe, 0x18, 0x71, 0x01,
	0xfc, 0x6e, 0xda, 0x07, 0x42, 0x9e, 0xc1, 0x58, 0xe2, 0x0d, 0xed, 0xf0, 0x3f, 0xa0, 0xc5, 0x31,
	0x4c, 0xf6, 0x25, 0xa9, 0x10, 0x97, 0xfd, 0xf0, 0xaf, 0x78, 0xfd, 0x2b, 0x00, 0x00, 0xff, 0xff,
	0x76, 0x9d, 0x75, 0xb9, 0x6f, 0x04, 0x00, 0x00,
}
