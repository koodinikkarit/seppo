// Code generated by protoc-gen-go.
// source: song_database.proto
// DO NOT EDIT!

package SeppoService

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type SongDatabase struct {
	Id      uint64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name    string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Version uint64 `protobuf:"varint,3,opt,name=version" json:"version,omitempty"`
}

func (m *SongDatabase) Reset()                    { *m = SongDatabase{} }
func (m *SongDatabase) String() string            { return proto.CompactTextString(m) }
func (*SongDatabase) ProtoMessage()               {}
func (*SongDatabase) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{0} }

func (m *SongDatabase) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *SongDatabase) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SongDatabase) GetVersion() uint64 {
	if m != nil {
		return m.Version
	}
	return 0
}

type SearchSongDatabasesRequest struct {
	Offset      uint32 `protobuf:"varint,1,opt,name=offset" json:"offset,omitempty"`
	Limit       uint32 `protobuf:"varint,2,opt,name=limit" json:"limit,omitempty"`
	SearchWord  string `protobuf:"bytes,3,opt,name=searchWord" json:"searchWord,omitempty"`
	VariationId uint64 `protobuf:"varint,4,opt,name=variationId" json:"variationId,omitempty"`
}

func (m *SearchSongDatabasesRequest) Reset()                    { *m = SearchSongDatabasesRequest{} }
func (m *SearchSongDatabasesRequest) String() string            { return proto.CompactTextString(m) }
func (*SearchSongDatabasesRequest) ProtoMessage()               {}
func (*SearchSongDatabasesRequest) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{1} }

func (m *SearchSongDatabasesRequest) GetOffset() uint32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *SearchSongDatabasesRequest) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *SearchSongDatabasesRequest) GetSearchWord() string {
	if m != nil {
		return m.SearchWord
	}
	return ""
}

func (m *SearchSongDatabasesRequest) GetVariationId() uint64 {
	if m != nil {
		return m.VariationId
	}
	return 0
}

type SearchSongDatabasesResponse struct {
	SongDatabases    []*SongDatabase `protobuf:"bytes,1,rep,name=songDatabases" json:"songDatabases,omitempty"`
	MaxSongDatabases uint64          `protobuf:"varint,2,opt,name=maxSongDatabases" json:"maxSongDatabases,omitempty"`
}

func (m *SearchSongDatabasesResponse) Reset()                    { *m = SearchSongDatabasesResponse{} }
func (m *SearchSongDatabasesResponse) String() string            { return proto.CompactTextString(m) }
func (*SearchSongDatabasesResponse) ProtoMessage()               {}
func (*SearchSongDatabasesResponse) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{2} }

func (m *SearchSongDatabasesResponse) GetSongDatabases() []*SongDatabase {
	if m != nil {
		return m.SongDatabases
	}
	return nil
}

func (m *SearchSongDatabasesResponse) GetMaxSongDatabases() uint64 {
	if m != nil {
		return m.MaxSongDatabases
	}
	return 0
}

type FetchSongDatabaseByIdRequest struct {
	SongDatabaseIds []uint64 `protobuf:"varint,1,rep,packed,name=songDatabaseIds" json:"songDatabaseIds,omitempty"`
}

func (m *FetchSongDatabaseByIdRequest) Reset()                    { *m = FetchSongDatabaseByIdRequest{} }
func (m *FetchSongDatabaseByIdRequest) String() string            { return proto.CompactTextString(m) }
func (*FetchSongDatabaseByIdRequest) ProtoMessage()               {}
func (*FetchSongDatabaseByIdRequest) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{3} }

func (m *FetchSongDatabaseByIdRequest) GetSongDatabaseIds() []uint64 {
	if m != nil {
		return m.SongDatabaseIds
	}
	return nil
}

type FetchSongDatabaseByIdResponse struct {
	SongDatabases []*SongDatabase `protobuf:"bytes,1,rep,name=songDatabases" json:"songDatabases,omitempty"`
}

func (m *FetchSongDatabaseByIdResponse) Reset()                    { *m = FetchSongDatabaseByIdResponse{} }
func (m *FetchSongDatabaseByIdResponse) String() string            { return proto.CompactTextString(m) }
func (*FetchSongDatabaseByIdResponse) ProtoMessage()               {}
func (*FetchSongDatabaseByIdResponse) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{4} }

func (m *FetchSongDatabaseByIdResponse) GetSongDatabases() []*SongDatabase {
	if m != nil {
		return m.SongDatabases
	}
	return nil
}

type CreateSongDatabaseRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *CreateSongDatabaseRequest) Reset()                    { *m = CreateSongDatabaseRequest{} }
func (m *CreateSongDatabaseRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateSongDatabaseRequest) ProtoMessage()               {}
func (*CreateSongDatabaseRequest) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{5} }

func (m *CreateSongDatabaseRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type CreateSongDatabaseResponse struct {
	SongDatabase *SongDatabase `protobuf:"bytes,1,opt,name=songDatabase" json:"songDatabase,omitempty"`
}

func (m *CreateSongDatabaseResponse) Reset()                    { *m = CreateSongDatabaseResponse{} }
func (m *CreateSongDatabaseResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateSongDatabaseResponse) ProtoMessage()               {}
func (*CreateSongDatabaseResponse) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{6} }

func (m *CreateSongDatabaseResponse) GetSongDatabase() *SongDatabase {
	if m != nil {
		return m.SongDatabase
	}
	return nil
}

type UpdateSongDatabaseRequest struct {
	SongDatabaseId uint64   `protobuf:"varint,1,opt,name=songDatabaseId" json:"songDatabaseId,omitempty"`
	Name           string   `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	AddTagIds      []uint64 `protobuf:"varint,3,rep,packed,name=addTagIds" json:"addTagIds,omitempty"`
	RemoveTagIds   []uint64 `protobuf:"varint,4,rep,packed,name=removeTagIds" json:"removeTagIds,omitempty"`
}

func (m *UpdateSongDatabaseRequest) Reset()                    { *m = UpdateSongDatabaseRequest{} }
func (m *UpdateSongDatabaseRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateSongDatabaseRequest) ProtoMessage()               {}
func (*UpdateSongDatabaseRequest) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{7} }

func (m *UpdateSongDatabaseRequest) GetSongDatabaseId() uint64 {
	if m != nil {
		return m.SongDatabaseId
	}
	return 0
}

func (m *UpdateSongDatabaseRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateSongDatabaseRequest) GetAddTagIds() []uint64 {
	if m != nil {
		return m.AddTagIds
	}
	return nil
}

func (m *UpdateSongDatabaseRequest) GetRemoveTagIds() []uint64 {
	if m != nil {
		return m.RemoveTagIds
	}
	return nil
}

type UpdateSongDatabaseResponse struct {
	SongDatabase *SongDatabase `protobuf:"bytes,1,opt,name=songDatabase" json:"songDatabase,omitempty"`
	Success      bool          `protobuf:"varint,2,opt,name=success" json:"success,omitempty"`
}

func (m *UpdateSongDatabaseResponse) Reset()                    { *m = UpdateSongDatabaseResponse{} }
func (m *UpdateSongDatabaseResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateSongDatabaseResponse) ProtoMessage()               {}
func (*UpdateSongDatabaseResponse) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{8} }

func (m *UpdateSongDatabaseResponse) GetSongDatabase() *SongDatabase {
	if m != nil {
		return m.SongDatabase
	}
	return nil
}

func (m *UpdateSongDatabaseResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type RemoveSongDatabaseRequest struct {
	SongDatabaseId uint64 `protobuf:"varint,1,opt,name=songDatabaseId" json:"songDatabaseId,omitempty"`
}

func (m *RemoveSongDatabaseRequest) Reset()                    { *m = RemoveSongDatabaseRequest{} }
func (m *RemoveSongDatabaseRequest) String() string            { return proto.CompactTextString(m) }
func (*RemoveSongDatabaseRequest) ProtoMessage()               {}
func (*RemoveSongDatabaseRequest) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{9} }

func (m *RemoveSongDatabaseRequest) GetSongDatabaseId() uint64 {
	if m != nil {
		return m.SongDatabaseId
	}
	return 0
}

type RemoveSongDatabaseResponse struct {
	Success bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
}

func (m *RemoveSongDatabaseResponse) Reset()                    { *m = RemoveSongDatabaseResponse{} }
func (m *RemoveSongDatabaseResponse) String() string            { return proto.CompactTextString(m) }
func (*RemoveSongDatabaseResponse) ProtoMessage()               {}
func (*RemoveSongDatabaseResponse) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{10} }

func (m *RemoveSongDatabaseResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func init() {
	proto.RegisterType((*SongDatabase)(nil), "SeppoService.SongDatabase")
	proto.RegisterType((*SearchSongDatabasesRequest)(nil), "SeppoService.SearchSongDatabasesRequest")
	proto.RegisterType((*SearchSongDatabasesResponse)(nil), "SeppoService.SearchSongDatabasesResponse")
	proto.RegisterType((*FetchSongDatabaseByIdRequest)(nil), "SeppoService.FetchSongDatabaseByIdRequest")
	proto.RegisterType((*FetchSongDatabaseByIdResponse)(nil), "SeppoService.FetchSongDatabaseByIdResponse")
	proto.RegisterType((*CreateSongDatabaseRequest)(nil), "SeppoService.CreateSongDatabaseRequest")
	proto.RegisterType((*CreateSongDatabaseResponse)(nil), "SeppoService.CreateSongDatabaseResponse")
	proto.RegisterType((*UpdateSongDatabaseRequest)(nil), "SeppoService.UpdateSongDatabaseRequest")
	proto.RegisterType((*UpdateSongDatabaseResponse)(nil), "SeppoService.UpdateSongDatabaseResponse")
	proto.RegisterType((*RemoveSongDatabaseRequest)(nil), "SeppoService.RemoveSongDatabaseRequest")
	proto.RegisterType((*RemoveSongDatabaseResponse)(nil), "SeppoService.RemoveSongDatabaseResponse")
}

func init() { proto.RegisterFile("song_database.proto", fileDescriptor9) }

var fileDescriptor9 = []byte{
	// 425 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x54, 0xd1, 0x6a, 0xd4, 0x40,
	0x14, 0x65, 0x76, 0x63, 0x75, 0x6f, 0xb3, 0x55, 0x46, 0x91, 0x6c, 0xac, 0x12, 0xe6, 0x41, 0x82,
	0x0f, 0x2b, 0x28, 0xf8, 0x28, 0x62, 0x45, 0x5c, 0xf0, 0x69, 0xa2, 0xf8, 0x22, 0xc8, 0x34, 0x73,
	0xbb, 0x0e, 0x98, 0x4c, 0x9c, 0x99, 0x06, 0xfd, 0x06, 0xfd, 0x01, 0xff, 0x56, 0x3a, 0x9b, 0xd0,
	0x99, 0x9a, 0xfa, 0xd2, 0xbe, 0xe5, 0x9e, 0x9c, 0x7b, 0xee, 0xb9, 0x87, 0x9b, 0xc0, 0x5d, 0xab,
	0xdb, 0xed, 0x17, 0x29, 0x9c, 0x38, 0x16, 0x16, 0xd7, 0x9d, 0xd1, 0x4e, 0xd3, 0xb4, 0xc2, 0xae,
	0xd3, 0x15, 0x9a, 0x5e, 0xd5, 0xc8, 0xde, 0x43, 0x5a, 0xe9, 0x76, 0xfb, 0x66, 0xe0, 0xd0, 0x03,
	0x98, 0x29, 0x99, 0x91, 0x82, 0x94, 0x09, 0x9f, 0x29, 0x49, 0x29, 0x24, 0xad, 0x68, 0x30, 0x9b,
	0x15, 0xa4, 0x5c, 0x70, 0xff, 0x4c, 0x33, 0xb8, 0xd9, 0xa3, 0xb1, 0x4a, 0xb7, 0xd9, 0xdc, 0x13,
	0xc7, 0x92, 0xfd, 0x26, 0x90, 0x57, 0x28, 0x4c, 0xfd, 0x35, 0x14, 0xb5, 0x1c, 0xbf, 0x9f, 0xa2,
	0x75, 0xf4, 0x3e, 0xec, 0xe9, 0x93, 0x13, 0x8b, 0xce, 0x0f, 0x58, 0xf2, 0xa1, 0xa2, 0xf7, 0xe0,
	0xc6, 0x37, 0xd5, 0x28, 0xe7, 0xa7, 0x2c, 0xf9, 0xae, 0xa0, 0x8f, 0x00, 0xac, 0xd7, 0xfa, 0xa4,
	0x8d, 0xf4, 0x93, 0x16, 0x3c, 0x40, 0x68, 0x01, 0xfb, 0xbd, 0x30, 0x4a, 0x38, 0xa5, 0xdb, 0x8d,
	0xcc, 0x12, 0x6f, 0x25, 0x84, 0xd8, 0x2f, 0x02, 0x0f, 0x26, 0xed, 0xd8, 0x4e, 0xb7, 0x16, 0xe9,
	0x2b, 0x58, 0xda, 0xf0, 0x45, 0x46, 0x8a, 0x79, 0xb9, 0xff, 0x2c, 0x5f, 0x87, 0x11, 0xad, 0xc3,
	0x5e, 0x1e, 0x37, 0xd0, 0x27, 0x70, 0xa7, 0x11, 0x3f, 0x22, 0x75, 0xbf, 0x44, 0xc2, 0xff, 0xc1,
	0xd9, 0x3b, 0x38, 0x7c, 0x8b, 0x2e, 0xf6, 0xf2, 0xfa, 0xe7, 0x46, 0x8e, 0xe9, 0x94, 0x70, 0x3b,
	0x14, 0xdf, 0xc8, 0x9d, 0x9f, 0x84, 0x5f, 0x84, 0x99, 0x80, 0x87, 0x97, 0x28, 0x5d, 0xd7, 0x62,
	0xec, 0x29, 0xac, 0x8e, 0x0c, 0x0a, 0x87, 0x11, 0x69, 0x70, 0x3a, 0x1e, 0x05, 0x39, 0x3f, 0x0a,
	0xf6, 0x19, 0xf2, 0xa9, 0x86, 0xc1, 0xd0, 0x4b, 0x48, 0x43, 0x7d, 0xdf, 0xf9, 0x7f, 0x3f, 0x11,
	0x9f, 0xfd, 0x21, 0xb0, 0xfa, 0xd8, 0xc9, 0x4b, 0xfc, 0x3c, 0x86, 0x83, 0x38, 0xa2, 0xe1, 0x80,
	0x2f, 0xa0, 0x93, 0xc7, 0x7c, 0x08, 0x0b, 0x21, 0xe5, 0x07, 0xb1, 0x3d, 0xcb, 0x7b, 0xee, 0xf3,
	0x3e, 0x07, 0x28, 0x83, 0xd4, 0x60, 0xa3, 0x7b, 0x1c, 0x08, 0x89, 0x27, 0x44, 0x18, 0xeb, 0x21,
	0x9f, 0xb2, 0x76, 0x3d, 0x9b, 0x9f, 0x7d, 0x6c, 0xf6, 0xb4, 0xae, 0xd1, 0xee, 0x0e, 0xeb, 0x16,
	0x1f, 0x4b, 0x76, 0x04, 0x2b, 0xee, 0x7d, 0x5c, 0x21, 0x12, 0xf6, 0x02, 0xf2, 0x29, 0x91, 0xc1,
	0x7c, 0x30, 0x9c, 0x44, 0xc3, 0x8f, 0xf7, 0xfc, 0xcf, 0xe4, 0xf9, 0xdf, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x1f, 0x7d, 0x47, 0x47, 0x63, 0x04, 0x00, 0x00,
}
