// Code generated by protoc-gen-go.
// source: language.proto
// DO NOT EDIT!

package SeppoService

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Language struct {
	Id   uint64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *Language) Reset()                    { *m = Language{} }
func (m *Language) String() string            { return proto.CompactTextString(m) }
func (*Language) ProtoMessage()               {}
func (*Language) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{0} }

func (m *Language) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Language) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type SearchLanguagesRequest struct {
	Offset     uint32 `protobuf:"varint,1,opt,name=offset" json:"offset,omitempty"`
	Limit      uint32 `protobuf:"varint,2,opt,name=limit" json:"limit,omitempty"`
	SearchWord string `protobuf:"bytes,3,opt,name=searchWord" json:"searchWord,omitempty"`
}

func (m *SearchLanguagesRequest) Reset()                    { *m = SearchLanguagesRequest{} }
func (m *SearchLanguagesRequest) String() string            { return proto.CompactTextString(m) }
func (*SearchLanguagesRequest) ProtoMessage()               {}
func (*SearchLanguagesRequest) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{1} }

func (m *SearchLanguagesRequest) GetOffset() uint32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *SearchLanguagesRequest) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *SearchLanguagesRequest) GetSearchWord() string {
	if m != nil {
		return m.SearchWord
	}
	return ""
}

type SearchLanguagesResponse struct {
	Languages    []*Language `protobuf:"bytes,1,rep,name=languages" json:"languages,omitempty"`
	MaxLanguages uint64      `protobuf:"varint,2,opt,name=maxLanguages" json:"maxLanguages,omitempty"`
}

func (m *SearchLanguagesResponse) Reset()                    { *m = SearchLanguagesResponse{} }
func (m *SearchLanguagesResponse) String() string            { return proto.CompactTextString(m) }
func (*SearchLanguagesResponse) ProtoMessage()               {}
func (*SearchLanguagesResponse) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{2} }

func (m *SearchLanguagesResponse) GetLanguages() []*Language {
	if m != nil {
		return m.Languages
	}
	return nil
}

func (m *SearchLanguagesResponse) GetMaxLanguages() uint64 {
	if m != nil {
		return m.MaxLanguages
	}
	return 0
}

type FetchLanguageByIdRequest struct {
	LanguageIds []uint64 `protobuf:"varint,1,rep,packed,name=languageIds" json:"languageIds,omitempty"`
}

func (m *FetchLanguageByIdRequest) Reset()                    { *m = FetchLanguageByIdRequest{} }
func (m *FetchLanguageByIdRequest) String() string            { return proto.CompactTextString(m) }
func (*FetchLanguageByIdRequest) ProtoMessage()               {}
func (*FetchLanguageByIdRequest) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{3} }

func (m *FetchLanguageByIdRequest) GetLanguageIds() []uint64 {
	if m != nil {
		return m.LanguageIds
	}
	return nil
}

type FetchLanguageByIdResponse struct {
	Languages []*Language `protobuf:"bytes,1,rep,name=languages" json:"languages,omitempty"`
}

func (m *FetchLanguageByIdResponse) Reset()                    { *m = FetchLanguageByIdResponse{} }
func (m *FetchLanguageByIdResponse) String() string            { return proto.CompactTextString(m) }
func (*FetchLanguageByIdResponse) ProtoMessage()               {}
func (*FetchLanguageByIdResponse) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{4} }

func (m *FetchLanguageByIdResponse) GetLanguages() []*Language {
	if m != nil {
		return m.Languages
	}
	return nil
}

type CreateLanguageRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *CreateLanguageRequest) Reset()                    { *m = CreateLanguageRequest{} }
func (m *CreateLanguageRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateLanguageRequest) ProtoMessage()               {}
func (*CreateLanguageRequest) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{5} }

func (m *CreateLanguageRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type CreateLanguageResponse struct {
	Language *Language `protobuf:"bytes,1,opt,name=language" json:"language,omitempty"`
}

func (m *CreateLanguageResponse) Reset()                    { *m = CreateLanguageResponse{} }
func (m *CreateLanguageResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateLanguageResponse) ProtoMessage()               {}
func (*CreateLanguageResponse) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{6} }

func (m *CreateLanguageResponse) GetLanguage() *Language {
	if m != nil {
		return m.Language
	}
	return nil
}

type UpdateLanguageRequest struct {
	LanguageId uint64 `protobuf:"varint,1,opt,name=languageId" json:"languageId,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *UpdateLanguageRequest) Reset()                    { *m = UpdateLanguageRequest{} }
func (m *UpdateLanguageRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateLanguageRequest) ProtoMessage()               {}
func (*UpdateLanguageRequest) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{7} }

func (m *UpdateLanguageRequest) GetLanguageId() uint64 {
	if m != nil {
		return m.LanguageId
	}
	return 0
}

func (m *UpdateLanguageRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type UpdateLanguageResponse struct {
	Language *Language `protobuf:"bytes,1,opt,name=language" json:"language,omitempty"`
	Success  bool      `protobuf:"varint,3,opt,name=success" json:"success,omitempty"`
}

func (m *UpdateLanguageResponse) Reset()                    { *m = UpdateLanguageResponse{} }
func (m *UpdateLanguageResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateLanguageResponse) ProtoMessage()               {}
func (*UpdateLanguageResponse) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{8} }

func (m *UpdateLanguageResponse) GetLanguage() *Language {
	if m != nil {
		return m.Language
	}
	return nil
}

func (m *UpdateLanguageResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type RemoveLanguageRequest struct {
	LanguageId uint64 `protobuf:"varint,1,opt,name=languageId" json:"languageId,omitempty"`
}

func (m *RemoveLanguageRequest) Reset()                    { *m = RemoveLanguageRequest{} }
func (m *RemoveLanguageRequest) String() string            { return proto.CompactTextString(m) }
func (*RemoveLanguageRequest) ProtoMessage()               {}
func (*RemoveLanguageRequest) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{9} }

func (m *RemoveLanguageRequest) GetLanguageId() uint64 {
	if m != nil {
		return m.LanguageId
	}
	return 0
}

type RemoveLanguageResponse struct {
	Success bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
}

func (m *RemoveLanguageResponse) Reset()                    { *m = RemoveLanguageResponse{} }
func (m *RemoveLanguageResponse) String() string            { return proto.CompactTextString(m) }
func (*RemoveLanguageResponse) ProtoMessage()               {}
func (*RemoveLanguageResponse) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{10} }

func (m *RemoveLanguageResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func init() {
	proto.RegisterType((*Language)(nil), "SeppoService.Language")
	proto.RegisterType((*SearchLanguagesRequest)(nil), "SeppoService.SearchLanguagesRequest")
	proto.RegisterType((*SearchLanguagesResponse)(nil), "SeppoService.SearchLanguagesResponse")
	proto.RegisterType((*FetchLanguageByIdRequest)(nil), "SeppoService.FetchLanguageByIdRequest")
	proto.RegisterType((*FetchLanguageByIdResponse)(nil), "SeppoService.FetchLanguageByIdResponse")
	proto.RegisterType((*CreateLanguageRequest)(nil), "SeppoService.CreateLanguageRequest")
	proto.RegisterType((*CreateLanguageResponse)(nil), "SeppoService.CreateLanguageResponse")
	proto.RegisterType((*UpdateLanguageRequest)(nil), "SeppoService.UpdateLanguageRequest")
	proto.RegisterType((*UpdateLanguageResponse)(nil), "SeppoService.UpdateLanguageResponse")
	proto.RegisterType((*RemoveLanguageRequest)(nil), "SeppoService.RemoveLanguageRequest")
	proto.RegisterType((*RemoveLanguageResponse)(nil), "SeppoService.RemoveLanguageResponse")
}

func init() { proto.RegisterFile("language.proto", fileDescriptor4) }

var fileDescriptor4 = []byte{
	// 346 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x93, 0xcf, 0x4f, 0xfa, 0x40,
	0x10, 0xc5, 0x53, 0xe8, 0x97, 0x2f, 0x3c, 0x7e, 0x1c, 0x36, 0x52, 0xeb, 0x85, 0x34, 0x7b, 0x22,
	0x31, 0xe9, 0x01, 0x4d, 0xbc, 0x78, 0xd2, 0xc4, 0x84, 0xc8, 0xc5, 0x25, 0xc6, 0x73, 0x6d, 0x07,
	0x6c, 0x42, 0xd9, 0xda, 0x2d, 0x44, 0xff, 0x7b, 0x93, 0xa5, 0x0b, 0x0b, 0xc2, 0x41, 0xbd, 0x75,
	0x67, 0xe7, 0xbd, 0xcf, 0x9b, 0xec, 0x14, 0xbd, 0x45, 0xb4, 0x9c, 0xaf, 0xa2, 0x39, 0x85, 0x79,
	0x21, 0x4b, 0xc9, 0x3a, 0x53, 0xca, 0x73, 0x39, 0xa5, 0x62, 0x9d, 0xc6, 0xc4, 0x43, 0x34, 0x27,
	0xd5, 0x3d, 0xeb, 0xa1, 0x96, 0x26, 0xbe, 0x13, 0x38, 0x43, 0x57, 0xd4, 0xd2, 0x84, 0x31, 0xb8,
	0xcb, 0x28, 0x23, 0xbf, 0x16, 0x38, 0xc3, 0x96, 0xd0, 0xdf, 0x7c, 0x06, 0x6f, 0x4a, 0x51, 0x11,
	0xbf, 0x19, 0x95, 0x12, 0xf4, 0xbe, 0x22, 0x55, 0x32, 0x0f, 0x0d, 0x39, 0x9b, 0x29, 0x2a, 0xb5,
	0x43, 0x57, 0x54, 0x27, 0x76, 0x86, 0x7f, 0x8b, 0x34, 0x4b, 0x4b, 0x6d, 0xd3, 0x15, 0x9b, 0x03,
	0x1b, 0x00, 0x4a, 0xfb, 0xbc, 0xc8, 0x22, 0xf1, 0xeb, 0x9a, 0x60, 0x55, 0xb8, 0xc2, 0xf9, 0x37,
	0x8e, 0xca, 0xe5, 0x52, 0x11, 0xbb, 0x46, 0xcb, 0x8c, 0xa4, 0x7c, 0x27, 0xa8, 0x0f, 0xdb, 0x23,
	0x2f, 0xb4, 0x87, 0x0a, 0x8d, 0x46, 0xec, 0x1a, 0x19, 0x47, 0x27, 0x8b, 0x3e, 0xb6, 0x6e, 0x3a,
	0x8d, 0x2b, 0xf6, 0x6a, 0xfc, 0x16, 0xfe, 0x03, 0x95, 0x3b, 0xe6, 0xdd, 0xe7, 0x38, 0x31, 0xe3,
	0x05, 0x68, 0x1b, 0xb3, 0x71, 0xb2, 0xe1, 0xba, 0xc2, 0x2e, 0xf1, 0x27, 0x5c, 0x1c, 0x51, 0xff,
	0x25, 0x34, 0xbf, 0x44, 0xff, 0xbe, 0xa0, 0xa8, 0xa4, 0xed, 0x65, 0x95, 0xc6, 0x3c, 0x8d, 0x63,
	0x3d, 0xcd, 0x04, 0xde, 0x61, 0x73, 0x05, 0x1f, 0xa1, 0x69, 0x3c, 0xb5, 0xe2, 0x34, 0x7b, 0xdb,
	0xc7, 0x1f, 0xd1, 0x7f, 0xce, 0x93, 0x23, 0xe8, 0x01, 0xb0, 0x9b, 0xba, 0xda, 0x16, 0xab, 0x72,
	0x6a, 0x6b, 0x0e, 0xcd, 0x7e, 0x1f, 0x8d, 0xf9, 0xf8, 0xaf, 0x56, 0x71, 0x4c, 0x4a, 0xe9, 0xc5,
	0x69, 0x0a, 0x73, 0xe4, 0x37, 0xe8, 0x0b, 0xca, 0xe4, 0xfa, 0xa7, 0xa1, 0xf9, 0x08, 0xde, 0xa1,
	0xb0, 0x0a, 0x68, 0xc1, 0x9c, 0x3d, 0xd8, 0x6b, 0x43, 0xff, 0x4f, 0x57, 0x5f, 0x01, 0x00, 0x00,
	0xff, 0xff, 0xa4, 0x3b, 0xa4, 0x65, 0x61, 0x03, 0x00, 0x00,
}
