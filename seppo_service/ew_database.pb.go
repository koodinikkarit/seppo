// Code generated by protoc-gen-go.
// source: ew_database.proto
// DO NOT EDIT!

package SeppoService

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type EwDatabase struct {
	Id                              uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name                            string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	SongDatabaseId                  uint32 `protobuf:"varint,3,opt,name=songDatabaseId" json:"songDatabaseId,omitempty"`
	DatabaseKey                     string `protobuf:"bytes,4,opt,name=databaseKey" json:"databaseKey,omitempty"`
	RemoveSongsFromExternalDatabase bool   `protobuf:"varint,5,opt,name=removeSongsFromExternalDatabase" json:"removeSongsFromExternalDatabase,omitempty"`
	RemoveSongsFromSongDatabase     bool   `protobuf:"varint,6,opt,name=removeSongsFromSongDatabase" json:"removeSongsFromSongDatabase,omitempty"`
	VariationVersionConflictAction  uint32 `protobuf:"varint,7,opt,name=variationVersionConflictAction" json:"variationVersionConflictAction,omitempty"`
}

func (m *EwDatabase) Reset()                    { *m = EwDatabase{} }
func (m *EwDatabase) String() string            { return proto.CompactTextString(m) }
func (*EwDatabase) ProtoMessage()               {}
func (*EwDatabase) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *EwDatabase) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *EwDatabase) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *EwDatabase) GetSongDatabaseId() uint32 {
	if m != nil {
		return m.SongDatabaseId
	}
	return 0
}

func (m *EwDatabase) GetDatabaseKey() string {
	if m != nil {
		return m.DatabaseKey
	}
	return ""
}

func (m *EwDatabase) GetRemoveSongsFromExternalDatabase() bool {
	if m != nil {
		return m.RemoveSongsFromExternalDatabase
	}
	return false
}

func (m *EwDatabase) GetRemoveSongsFromSongDatabase() bool {
	if m != nil {
		return m.RemoveSongsFromSongDatabase
	}
	return false
}

func (m *EwDatabase) GetVariationVersionConflictAction() uint32 {
	if m != nil {
		return m.VariationVersionConflictAction
	}
	return 0
}

type SearchEwDatabasesRequest struct {
	Offset         uint32 `protobuf:"varint,1,opt,name=offset" json:"offset,omitempty"`
	Limit          uint32 `protobuf:"varint,2,opt,name=limit" json:"limit,omitempty"`
	SongDatabaseId uint32 `protobuf:"varint,3,opt,name=songDatabaseId" json:"songDatabaseId,omitempty"`
}

func (m *SearchEwDatabasesRequest) Reset()                    { *m = SearchEwDatabasesRequest{} }
func (m *SearchEwDatabasesRequest) String() string            { return proto.CompactTextString(m) }
func (*SearchEwDatabasesRequest) ProtoMessage()               {}
func (*SearchEwDatabasesRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func (m *SearchEwDatabasesRequest) GetOffset() uint32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *SearchEwDatabasesRequest) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *SearchEwDatabasesRequest) GetSongDatabaseId() uint32 {
	if m != nil {
		return m.SongDatabaseId
	}
	return 0
}

type SearchEwDatabasesResponse struct {
	EwDatabases    []*EwDatabase `protobuf:"bytes,1,rep,name=ewDatabases" json:"ewDatabases,omitempty"`
	MaxEwDatabases uint32        `protobuf:"varint,2,opt,name=maxEwDatabases" json:"maxEwDatabases,omitempty"`
}

func (m *SearchEwDatabasesResponse) Reset()                    { *m = SearchEwDatabasesResponse{} }
func (m *SearchEwDatabasesResponse) String() string            { return proto.CompactTextString(m) }
func (*SearchEwDatabasesResponse) ProtoMessage()               {}
func (*SearchEwDatabasesResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

func (m *SearchEwDatabasesResponse) GetEwDatabases() []*EwDatabase {
	if m != nil {
		return m.EwDatabases
	}
	return nil
}

func (m *SearchEwDatabasesResponse) GetMaxEwDatabases() uint32 {
	if m != nil {
		return m.MaxEwDatabases
	}
	return 0
}

type FetchEwDatabaseByIdRequest struct {
	EwDatabaseIds []uint32 `protobuf:"varint,1,rep,packed,name=ewDatabaseIds" json:"ewDatabaseIds,omitempty"`
}

func (m *FetchEwDatabaseByIdRequest) Reset()                    { *m = FetchEwDatabaseByIdRequest{} }
func (m *FetchEwDatabaseByIdRequest) String() string            { return proto.CompactTextString(m) }
func (*FetchEwDatabaseByIdRequest) ProtoMessage()               {}
func (*FetchEwDatabaseByIdRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{3} }

func (m *FetchEwDatabaseByIdRequest) GetEwDatabaseIds() []uint32 {
	if m != nil {
		return m.EwDatabaseIds
	}
	return nil
}

type FetchEwDatabaseByIdResponse struct {
	EwDatabases []*EwDatabase `protobuf:"bytes,1,rep,name=ewDatabases" json:"ewDatabases,omitempty"`
}

func (m *FetchEwDatabaseByIdResponse) Reset()                    { *m = FetchEwDatabaseByIdResponse{} }
func (m *FetchEwDatabaseByIdResponse) String() string            { return proto.CompactTextString(m) }
func (*FetchEwDatabaseByIdResponse) ProtoMessage()               {}
func (*FetchEwDatabaseByIdResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{4} }

func (m *FetchEwDatabaseByIdResponse) GetEwDatabases() []*EwDatabase {
	if m != nil {
		return m.EwDatabases
	}
	return nil
}

type CreateEwDatabaseRequest struct {
	SongDatabaseId uint32 `protobuf:"varint,1,opt,name=songDatabaseId" json:"songDatabaseId,omitempty"`
	Name           string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *CreateEwDatabaseRequest) Reset()                    { *m = CreateEwDatabaseRequest{} }
func (m *CreateEwDatabaseRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateEwDatabaseRequest) ProtoMessage()               {}
func (*CreateEwDatabaseRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{5} }

func (m *CreateEwDatabaseRequest) GetSongDatabaseId() uint32 {
	if m != nil {
		return m.SongDatabaseId
	}
	return 0
}

func (m *CreateEwDatabaseRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type CreateEwDatabaseResponse struct {
	EwDatabase *EwDatabase `protobuf:"bytes,1,opt,name=ewDatabase" json:"ewDatabase,omitempty"`
}

func (m *CreateEwDatabaseResponse) Reset()                    { *m = CreateEwDatabaseResponse{} }
func (m *CreateEwDatabaseResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateEwDatabaseResponse) ProtoMessage()               {}
func (*CreateEwDatabaseResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{6} }

func (m *CreateEwDatabaseResponse) GetEwDatabase() *EwDatabase {
	if m != nil {
		return m.EwDatabase
	}
	return nil
}

type UpdateEwDatabaseRequest struct {
	EwDatabaseId                    uint32 `protobuf:"varint,1,opt,name=ewDatabaseId" json:"ewDatabaseId,omitempty"`
	Name                            string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	SongDatabaseId                  uint32 `protobuf:"varint,3,opt,name=songDatabaseId" json:"songDatabaseId,omitempty"`
	RemoveSongsFromExternalDatabase bool   `protobuf:"varint,4,opt,name=removeSongsFromExternalDatabase" json:"removeSongsFromExternalDatabase,omitempty"`
	RemoveSongsFromSongDatabase     bool   `protobuf:"varint,5,opt,name=removeSongsFromSongDatabase" json:"removeSongsFromSongDatabase,omitempty"`
	VariationVersionConflictAction  uint32 `protobuf:"varint,6,opt,name=variationVersionConflictAction" json:"variationVersionConflictAction,omitempty"`
}

func (m *UpdateEwDatabaseRequest) Reset()                    { *m = UpdateEwDatabaseRequest{} }
func (m *UpdateEwDatabaseRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateEwDatabaseRequest) ProtoMessage()               {}
func (*UpdateEwDatabaseRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{7} }

func (m *UpdateEwDatabaseRequest) GetEwDatabaseId() uint32 {
	if m != nil {
		return m.EwDatabaseId
	}
	return 0
}

func (m *UpdateEwDatabaseRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateEwDatabaseRequest) GetSongDatabaseId() uint32 {
	if m != nil {
		return m.SongDatabaseId
	}
	return 0
}

func (m *UpdateEwDatabaseRequest) GetRemoveSongsFromExternalDatabase() bool {
	if m != nil {
		return m.RemoveSongsFromExternalDatabase
	}
	return false
}

func (m *UpdateEwDatabaseRequest) GetRemoveSongsFromSongDatabase() bool {
	if m != nil {
		return m.RemoveSongsFromSongDatabase
	}
	return false
}

func (m *UpdateEwDatabaseRequest) GetVariationVersionConflictAction() uint32 {
	if m != nil {
		return m.VariationVersionConflictAction
	}
	return 0
}

type UpdateEwDatabaseResponse struct {
	EwDatabase *EwDatabase `protobuf:"bytes,1,opt,name=ewDatabase" json:"ewDatabase,omitempty"`
	Success    bool        `protobuf:"varint,2,opt,name=success" json:"success,omitempty"`
}

func (m *UpdateEwDatabaseResponse) Reset()                    { *m = UpdateEwDatabaseResponse{} }
func (m *UpdateEwDatabaseResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateEwDatabaseResponse) ProtoMessage()               {}
func (*UpdateEwDatabaseResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{8} }

func (m *UpdateEwDatabaseResponse) GetEwDatabase() *EwDatabase {
	if m != nil {
		return m.EwDatabase
	}
	return nil
}

func (m *UpdateEwDatabaseResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type RemoveEwDatabaseRequest struct {
	EwDatabaseId uint32 `protobuf:"varint,1,opt,name=ewDatabaseId" json:"ewDatabaseId,omitempty"`
}

func (m *RemoveEwDatabaseRequest) Reset()                    { *m = RemoveEwDatabaseRequest{} }
func (m *RemoveEwDatabaseRequest) String() string            { return proto.CompactTextString(m) }
func (*RemoveEwDatabaseRequest) ProtoMessage()               {}
func (*RemoveEwDatabaseRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{9} }

func (m *RemoveEwDatabaseRequest) GetEwDatabaseId() uint32 {
	if m != nil {
		return m.EwDatabaseId
	}
	return 0
}

type RemoveEwDatabaseResponse struct {
	Success bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
}

func (m *RemoveEwDatabaseResponse) Reset()                    { *m = RemoveEwDatabaseResponse{} }
func (m *RemoveEwDatabaseResponse) String() string            { return proto.CompactTextString(m) }
func (*RemoveEwDatabaseResponse) ProtoMessage()               {}
func (*RemoveEwDatabaseResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{10} }

func (m *RemoveEwDatabaseResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func init() {
	proto.RegisterType((*EwDatabase)(nil), "SeppoService.EwDatabase")
	proto.RegisterType((*SearchEwDatabasesRequest)(nil), "SeppoService.SearchEwDatabasesRequest")
	proto.RegisterType((*SearchEwDatabasesResponse)(nil), "SeppoService.SearchEwDatabasesResponse")
	proto.RegisterType((*FetchEwDatabaseByIdRequest)(nil), "SeppoService.FetchEwDatabaseByIdRequest")
	proto.RegisterType((*FetchEwDatabaseByIdResponse)(nil), "SeppoService.FetchEwDatabaseByIdResponse")
	proto.RegisterType((*CreateEwDatabaseRequest)(nil), "SeppoService.CreateEwDatabaseRequest")
	proto.RegisterType((*CreateEwDatabaseResponse)(nil), "SeppoService.CreateEwDatabaseResponse")
	proto.RegisterType((*UpdateEwDatabaseRequest)(nil), "SeppoService.UpdateEwDatabaseRequest")
	proto.RegisterType((*UpdateEwDatabaseResponse)(nil), "SeppoService.UpdateEwDatabaseResponse")
	proto.RegisterType((*RemoveEwDatabaseRequest)(nil), "SeppoService.RemoveEwDatabaseRequest")
	proto.RegisterType((*RemoveEwDatabaseResponse)(nil), "SeppoService.RemoveEwDatabaseResponse")
}

func init() { proto.RegisterFile("ew_database.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 469 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x54, 0x41, 0x6b, 0x13, 0x41,
	0x18, 0x65, 0xd3, 0x24, 0xad, 0x5f, 0x9a, 0x82, 0x83, 0x98, 0xd1, 0x82, 0x2e, 0x83, 0x48, 0x4e,
	0x39, 0xa8, 0x07, 0x11, 0x04, 0x6d, 0x6d, 0x30, 0x78, 0x9b, 0xb5, 0x82, 0x27, 0x99, 0xee, 0x7e,
	0xa9, 0x03, 0xd9, 0x99, 0x75, 0x66, 0x9a, 0xb6, 0x27, 0x7f, 0xa1, 0xfe, 0x26, 0xe9, 0x64, 0x97,
	0x9d, 0x24, 0x4b, 0x1b, 0x4c, 0x6f, 0x99, 0xc7, 0x9b, 0xf7, 0xbd, 0xef, 0xed, 0xbc, 0xc0, 0x43,
	0xbc, 0xfc, 0x91, 0x09, 0x27, 0xce, 0x84, 0xc5, 0x51, 0x61, 0xb4, 0xd3, 0x64, 0x3f, 0xc1, 0xa2,
	0xd0, 0x09, 0x9a, 0xb9, 0x4c, 0x91, 0xfd, 0x6d, 0x01, 0x9c, 0x5c, 0x7e, 0x2a, 0x29, 0xe4, 0x00,
	0x5a, 0x32, 0xa3, 0x51, 0x1c, 0x0d, 0xfb, 0xbc, 0x25, 0x33, 0x42, 0xa0, 0xad, 0x44, 0x8e, 0xb4,
	0x15, 0x47, 0xc3, 0x07, 0xdc, 0xff, 0x26, 0x2f, 0xe1, 0xc0, 0x6a, 0x75, 0x5e, 0xdd, 0x99, 0x64,
	0x74, 0xc7, 0xf3, 0x57, 0x50, 0x12, 0x43, 0xaf, 0x1a, 0xfd, 0x05, 0xaf, 0x69, 0xdb, 0x4b, 0x84,
	0x10, 0xf9, 0x0c, 0xcf, 0x0d, 0xe6, 0x7a, 0x8e, 0x89, 0x56, 0xe7, 0x76, 0x6c, 0x74, 0x7e, 0x72,
	0xe5, 0xd0, 0x28, 0x31, 0xab, 0x64, 0x68, 0x27, 0x8e, 0x86, 0x7b, 0xfc, 0x2e, 0x1a, 0xf9, 0x00,
	0x87, 0x2b, 0x94, 0x24, 0x30, 0x43, 0xbb, 0x5e, 0xe5, 0x36, 0x0a, 0x19, 0xc3, 0xb3, 0xb9, 0x30,
	0x52, 0x38, 0xa9, 0xd5, 0x37, 0x34, 0x56, 0x6a, 0x75, 0xac, 0xd5, 0x74, 0x26, 0x53, 0xf7, 0x31,
	0xbd, 0x01, 0xe9, 0xae, 0xdf, 0xf2, 0x0e, 0x16, 0x2b, 0x80, 0x26, 0x28, 0x4c, 0xfa, 0xb3, 0x4e,
	0xd5, 0x72, 0xfc, 0x75, 0x81, 0xd6, 0x91, 0xc7, 0xd0, 0xd5, 0xd3, 0xa9, 0x45, 0x57, 0x26, 0x5c,
	0x9e, 0xc8, 0x23, 0xe8, 0xcc, 0x64, 0x2e, 0x9d, 0x8f, 0xb9, 0xcf, 0x17, 0x87, 0x4d, 0x73, 0x66,
	0xbf, 0xe1, 0x49, 0xc3, 0x44, 0x5b, 0x68, 0x65, 0x91, 0xbc, 0x83, 0x1e, 0xd6, 0x30, 0x8d, 0xe2,
	0x9d, 0x61, 0xef, 0x15, 0x1d, 0x85, 0x6f, 0x60, 0x54, 0xdf, 0xe3, 0x21, 0xf9, 0xc6, 0x40, 0x2e,
	0xae, 0x02, 0xd5, 0xd2, 0xdf, 0x0a, 0xca, 0x8e, 0xe0, 0xe9, 0x18, 0x5d, 0x38, 0xff, 0xe8, 0x7a,
	0x92, 0x55, 0x4b, 0xbf, 0x80, 0x7e, 0x2d, 0x3a, 0xc9, 0x16, 0x1e, 0xfa, 0x7c, 0x19, 0x64, 0xdf,
	0xe1, 0xb0, 0x51, 0x63, 0xfb, 0x35, 0xd8, 0x29, 0x0c, 0x8e, 0x0d, 0x0a, 0x87, 0x01, 0xa1, 0xf4,
	0xb6, 0x1e, 0x71, 0xd4, 0xf8, 0x94, 0x1b, 0x6a, 0xc0, 0xbe, 0x02, 0x5d, 0x97, 0x2d, 0xed, 0xbe,
	0x05, 0xa8, 0x1d, 0x78, 0xcd, 0xdb, 0xdc, 0x06, 0x5c, 0xf6, 0xa7, 0x05, 0x83, 0xd3, 0x22, 0x6b,
	0x74, 0xcb, 0x60, 0x3f, 0x0c, 0xad, 0xf4, 0xba, 0x84, 0x6d, 0x55, 0xd8, 0x0d, 0xea, 0xd8, 0xbe,
	0x97, 0x3a, 0x76, 0xee, 0xa3, 0x8e, 0xdd, 0x8d, 0xea, 0xa8, 0x80, 0xae, 0xc7, 0xb9, 0xed, 0x57,
	0x22, 0x14, 0x76, 0xed, 0x45, 0x9a, 0xa2, 0x5d, 0x54, 0x62, 0x8f, 0x57, 0x47, 0xf6, 0x1e, 0x06,
	0xdc, 0xaf, 0xf5, 0x5f, 0x9f, 0x8f, 0xbd, 0x01, 0xba, 0x7e, 0xbd, 0xb4, 0x1b, 0x0c, 0x8d, 0x96,
	0x86, 0x9e, 0x75, 0xfd, 0x3f, 0xfb, 0xeb, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xad, 0x30, 0x4c,
	0x0e, 0xee, 0x05, 0x00, 0x00,
}
