// Code generated by protoc-gen-go.
// source: tag.proto
// DO NOT EDIT!

package SeppoService

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Tag struct {
	Id   uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *Tag) Reset()                    { *m = Tag{} }
func (m *Tag) String() string            { return proto.CompactTextString(m) }
func (*Tag) ProtoMessage()               {}
func (*Tag) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{0} }

func (m *Tag) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Tag) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type TagsConnection struct {
	Tags    []*Tag `protobuf:"bytes,1,rep,name=tags" json:"tags,omitempty"`
	MaxTags uint32 `protobuf:"varint,2,opt,name=maxTags" json:"maxTags,omitempty"`
}

func (m *TagsConnection) Reset()                    { *m = TagsConnection{} }
func (m *TagsConnection) String() string            { return proto.CompactTextString(m) }
func (*TagsConnection) ProtoMessage()               {}
func (*TagsConnection) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{1} }

func (m *TagsConnection) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *TagsConnection) GetMaxTags() uint32 {
	if m != nil {
		return m.MaxTags
	}
	return 0
}

type SearchTagsRequest struct {
}

func (m *SearchTagsRequest) Reset()                    { *m = SearchTagsRequest{} }
func (m *SearchTagsRequest) String() string            { return proto.CompactTextString(m) }
func (*SearchTagsRequest) ProtoMessage()               {}
func (*SearchTagsRequest) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{2} }

type FetchTagByIdRequest struct {
	TagIds []uint32 `protobuf:"varint,1,rep,packed,name=tagIds" json:"tagIds,omitempty"`
}

func (m *FetchTagByIdRequest) Reset()                    { *m = FetchTagByIdRequest{} }
func (m *FetchTagByIdRequest) String() string            { return proto.CompactTextString(m) }
func (*FetchTagByIdRequest) ProtoMessage()               {}
func (*FetchTagByIdRequest) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{3} }

func (m *FetchTagByIdRequest) GetTagIds() []uint32 {
	if m != nil {
		return m.TagIds
	}
	return nil
}

type FetchTagByIdResponse struct {
	Tags []*Tag `protobuf:"bytes,1,rep,name=tags" json:"tags,omitempty"`
}

func (m *FetchTagByIdResponse) Reset()                    { *m = FetchTagByIdResponse{} }
func (m *FetchTagByIdResponse) String() string            { return proto.CompactTextString(m) }
func (*FetchTagByIdResponse) ProtoMessage()               {}
func (*FetchTagByIdResponse) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{4} }

func (m *FetchTagByIdResponse) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

type CreateTagRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *CreateTagRequest) Reset()                    { *m = CreateTagRequest{} }
func (m *CreateTagRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateTagRequest) ProtoMessage()               {}
func (*CreateTagRequest) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{5} }

func (m *CreateTagRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type CreateTagResponse struct {
	Tag *Tag `protobuf:"bytes,1,opt,name=tag" json:"tag,omitempty"`
}

func (m *CreateTagResponse) Reset()                    { *m = CreateTagResponse{} }
func (m *CreateTagResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateTagResponse) ProtoMessage()               {}
func (*CreateTagResponse) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{6} }

func (m *CreateTagResponse) GetTag() *Tag {
	if m != nil {
		return m.Tag
	}
	return nil
}

type EditTagRequest struct {
	TagId uint32 `protobuf:"varint,1,opt,name=tagId" json:"tagId,omitempty"`
	Name  string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *EditTagRequest) Reset()                    { *m = EditTagRequest{} }
func (m *EditTagRequest) String() string            { return proto.CompactTextString(m) }
func (*EditTagRequest) ProtoMessage()               {}
func (*EditTagRequest) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{7} }

func (m *EditTagRequest) GetTagId() uint32 {
	if m != nil {
		return m.TagId
	}
	return 0
}

func (m *EditTagRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type EditTagResponse struct {
	Tag *Tag `protobuf:"bytes,1,opt,name=tag" json:"tag,omitempty"`
}

func (m *EditTagResponse) Reset()                    { *m = EditTagResponse{} }
func (m *EditTagResponse) String() string            { return proto.CompactTextString(m) }
func (*EditTagResponse) ProtoMessage()               {}
func (*EditTagResponse) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{8} }

func (m *EditTagResponse) GetTag() *Tag {
	if m != nil {
		return m.Tag
	}
	return nil
}

type RemoveTagRequest struct {
	TagId uint32 `protobuf:"varint,1,opt,name=tagId" json:"tagId,omitempty"`
}

func (m *RemoveTagRequest) Reset()                    { *m = RemoveTagRequest{} }
func (m *RemoveTagRequest) String() string            { return proto.CompactTextString(m) }
func (*RemoveTagRequest) ProtoMessage()               {}
func (*RemoveTagRequest) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{9} }

func (m *RemoveTagRequest) GetTagId() uint32 {
	if m != nil {
		return m.TagId
	}
	return 0
}

type RemoveTagResponse struct {
	Success bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
}

func (m *RemoveTagResponse) Reset()                    { *m = RemoveTagResponse{} }
func (m *RemoveTagResponse) String() string            { return proto.CompactTextString(m) }
func (*RemoveTagResponse) ProtoMessage()               {}
func (*RemoveTagResponse) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{10} }

func (m *RemoveTagResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func init() {
	proto.RegisterType((*Tag)(nil), "SeppoService.Tag")
	proto.RegisterType((*TagsConnection)(nil), "SeppoService.TagsConnection")
	proto.RegisterType((*SearchTagsRequest)(nil), "SeppoService.SearchTagsRequest")
	proto.RegisterType((*FetchTagByIdRequest)(nil), "SeppoService.FetchTagByIdRequest")
	proto.RegisterType((*FetchTagByIdResponse)(nil), "SeppoService.FetchTagByIdResponse")
	proto.RegisterType((*CreateTagRequest)(nil), "SeppoService.CreateTagRequest")
	proto.RegisterType((*CreateTagResponse)(nil), "SeppoService.CreateTagResponse")
	proto.RegisterType((*EditTagRequest)(nil), "SeppoService.EditTagRequest")
	proto.RegisterType((*EditTagResponse)(nil), "SeppoService.EditTagResponse")
	proto.RegisterType((*RemoveTagRequest)(nil), "SeppoService.RemoveTagRequest")
	proto.RegisterType((*RemoveTagResponse)(nil), "SeppoService.RemoveTagResponse")
}

func init() { proto.RegisterFile("tag.proto", fileDescriptor8) }

var fileDescriptor8 = []byte{
	// 305 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x92, 0x41, 0x4b, 0xf3, 0x40,
	0x10, 0x86, 0x49, 0xd3, 0xaf, 0xfd, 0x3a, 0x9a, 0xd8, 0x6c, 0x8b, 0xe4, 0x18, 0x56, 0x94, 0x78,
	0x68, 0x0e, 0x0a, 0x22, 0x82, 0x17, 0x8b, 0x42, 0x8f, 0x6e, 0xf2, 0x07, 0xd6, 0x64, 0x58, 0x73,
	0x48, 0x36, 0x66, 0xb7, 0x45, 0xff, 0xbd, 0x64, 0xbb, 0x91, 0x08, 0x05, 0xf5, 0xb6, 0xef, 0xcc,
	0x3b, 0xf3, 0xcc, 0x0c, 0x0b, 0x33, 0xcd, 0x45, 0xd2, 0xb4, 0x52, 0x4b, 0x72, 0x9c, 0x62, 0xd3,
	0xc8, 0x14, 0xdb, 0x5d, 0x99, 0x23, 0xbd, 0x04, 0x37, 0xe3, 0x82, 0xf8, 0x30, 0x2a, 0x8b, 0xd0,
	0x89, 0x9c, 0xd8, 0x63, 0xa3, 0xb2, 0x20, 0x04, 0xc6, 0x35, 0xaf, 0x30, 0x1c, 0x45, 0x4e, 0x3c,
	0x63, 0xe6, 0x4d, 0x9f, 0xc1, 0xcf, 0xb8, 0x50, 0x6b, 0x59, 0xd7, 0x98, 0xeb, 0x52, 0xd6, 0xe4,
	0x1c, 0xc6, 0x9a, 0x0b, 0x15, 0x3a, 0x91, 0x1b, 0x1f, 0x5d, 0x05, 0xc9, 0xb0, 0x73, 0x92, 0x71,
	0xc1, 0x4c, 0x9a, 0x84, 0x30, 0xad, 0xf8, 0x7b, 0x57, 0x6b, 0xfa, 0x79, 0xac, 0x97, 0x74, 0x01,
	0x41, 0x8a, 0xbc, 0xcd, 0x5f, 0x3b, 0xc5, 0xf0, 0x6d, 0x8b, 0x4a, 0xd3, 0x15, 0x2c, 0x9e, 0x50,
	0x9b, 0xd8, 0xc3, 0xc7, 0xa6, 0xb0, 0x61, 0x72, 0x0a, 0x13, 0xcd, 0xc5, 0xa6, 0xd8, 0xe3, 0x3c,
	0x66, 0x15, 0xbd, 0x87, 0xe5, 0x77, 0xbb, 0x6a, 0x64, 0xad, 0xf0, 0x97, 0xc3, 0xd1, 0x0b, 0x98,
	0xaf, 0x5b, 0xe4, 0x1a, 0xbb, 0x90, 0x45, 0xf5, 0xdb, 0x3b, 0x83, 0xed, 0x6f, 0x21, 0x18, 0xf8,
	0x2c, 0xe3, 0x0c, 0x5c, 0xcd, 0x85, 0xf1, 0x1d, 0x44, 0x74, 0x59, 0x7a, 0x07, 0xfe, 0x63, 0x51,
	0xea, 0x41, 0xff, 0x25, 0xfc, 0x33, 0xc3, 0xdb, 0x83, 0xef, 0xc5, 0xc1, 0x9b, 0xdf, 0xc0, 0xc9,
	0x57, 0xed, 0x5f, 0x98, 0x31, 0xcc, 0x19, 0x56, 0x72, 0x87, 0x3f, 0x51, 0xe9, 0x0a, 0x82, 0x81,
	0xd3, 0x32, 0x42, 0x98, 0xaa, 0x6d, 0x9e, 0xa3, 0x52, 0xc6, 0xfc, 0x9f, 0xf5, 0xf2, 0x65, 0x62,
	0x3e, 0xd1, 0xf5, 0x67, 0x00, 0x00, 0x00, 0xff, 0xff, 0xec, 0x22, 0xf4, 0x4a, 0x51, 0x02, 0x00,
	0x00,
}
