// Code generated by protoc-gen-go.
// source: tag.proto
// DO NOT EDIT!

package SeppoService

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Tag struct {
	Id   uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *Tag) Reset()                    { *m = Tag{} }
func (m *Tag) String() string            { return proto.CompactTextString(m) }
func (*Tag) ProtoMessage()               {}
func (*Tag) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{0} }

func (m *Tag) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Tag) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type TagsConnection struct {
	Tags    []*Tag `protobuf:"bytes,1,rep,name=tags" json:"tags,omitempty"`
	MaxTags uint32 `protobuf:"varint,2,opt,name=maxTags" json:"maxTags,omitempty"`
	Id      uint32 `protobuf:"varint,3,opt,name=id" json:"id,omitempty"`
}

func (m *TagsConnection) Reset()                    { *m = TagsConnection{} }
func (m *TagsConnection) String() string            { return proto.CompactTextString(m) }
func (*TagsConnection) ProtoMessage()               {}
func (*TagsConnection) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{1} }

func (m *TagsConnection) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *TagsConnection) GetMaxTags() uint32 {
	if m != nil {
		return m.MaxTags
	}
	return 0
}

func (m *TagsConnection) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type SearchTagsRequest struct {
	SongDatabaseId uint32 `protobuf:"varint,1,opt,name=songDatabaseId" json:"songDatabaseId,omitempty"`
	VariationId    uint32 `protobuf:"varint,2,opt,name=variationId" json:"variationId,omitempty"`
	Offset         uint32 `protobuf:"varint,3,opt,name=offset" json:"offset,omitempty"`
	Limit          uint32 `protobuf:"varint,4,opt,name=limit" json:"limit,omitempty"`
	SearchWord     string `protobuf:"bytes,5,opt,name=searchWord" json:"searchWord,omitempty"`
}

func (m *SearchTagsRequest) Reset()                    { *m = SearchTagsRequest{} }
func (m *SearchTagsRequest) String() string            { return proto.CompactTextString(m) }
func (*SearchTagsRequest) ProtoMessage()               {}
func (*SearchTagsRequest) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{2} }

func (m *SearchTagsRequest) GetSongDatabaseId() uint32 {
	if m != nil {
		return m.SongDatabaseId
	}
	return 0
}

func (m *SearchTagsRequest) GetVariationId() uint32 {
	if m != nil {
		return m.VariationId
	}
	return 0
}

func (m *SearchTagsRequest) GetOffset() uint32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *SearchTagsRequest) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *SearchTagsRequest) GetSearchWord() string {
	if m != nil {
		return m.SearchWord
	}
	return ""
}

type FetchTagByIdRequest struct {
	TagIds []uint32 `protobuf:"varint,1,rep,packed,name=tagIds" json:"tagIds,omitempty"`
}

func (m *FetchTagByIdRequest) Reset()                    { *m = FetchTagByIdRequest{} }
func (m *FetchTagByIdRequest) String() string            { return proto.CompactTextString(m) }
func (*FetchTagByIdRequest) ProtoMessage()               {}
func (*FetchTagByIdRequest) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{3} }

func (m *FetchTagByIdRequest) GetTagIds() []uint32 {
	if m != nil {
		return m.TagIds
	}
	return nil
}

type FetchTagByIdResponse struct {
	Tags []*Tag `protobuf:"bytes,1,rep,name=tags" json:"tags,omitempty"`
}

func (m *FetchTagByIdResponse) Reset()                    { *m = FetchTagByIdResponse{} }
func (m *FetchTagByIdResponse) String() string            { return proto.CompactTextString(m) }
func (*FetchTagByIdResponse) ProtoMessage()               {}
func (*FetchTagByIdResponse) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{4} }

func (m *FetchTagByIdResponse) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

type CreateTagRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *CreateTagRequest) Reset()                    { *m = CreateTagRequest{} }
func (m *CreateTagRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateTagRequest) ProtoMessage()               {}
func (*CreateTagRequest) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{5} }

func (m *CreateTagRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type CreateTagResponse struct {
	Tag *Tag `protobuf:"bytes,1,opt,name=tag" json:"tag,omitempty"`
}

func (m *CreateTagResponse) Reset()                    { *m = CreateTagResponse{} }
func (m *CreateTagResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateTagResponse) ProtoMessage()               {}
func (*CreateTagResponse) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{6} }

func (m *CreateTagResponse) GetTag() *Tag {
	if m != nil {
		return m.Tag
	}
	return nil
}

type UpdateTagRequest struct {
	TagId uint32 `protobuf:"varint,1,opt,name=tagId" json:"tagId,omitempty"`
	Name  string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *UpdateTagRequest) Reset()                    { *m = UpdateTagRequest{} }
func (m *UpdateTagRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateTagRequest) ProtoMessage()               {}
func (*UpdateTagRequest) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{7} }

func (m *UpdateTagRequest) GetTagId() uint32 {
	if m != nil {
		return m.TagId
	}
	return 0
}

func (m *UpdateTagRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type UpdateTagResponse struct {
	Tag     *Tag `protobuf:"bytes,1,opt,name=tag" json:"tag,omitempty"`
	Success bool `protobuf:"varint,2,opt,name=Success" json:"Success,omitempty"`
}

func (m *UpdateTagResponse) Reset()                    { *m = UpdateTagResponse{} }
func (m *UpdateTagResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateTagResponse) ProtoMessage()               {}
func (*UpdateTagResponse) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{8} }

func (m *UpdateTagResponse) GetTag() *Tag {
	if m != nil {
		return m.Tag
	}
	return nil
}

func (m *UpdateTagResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type RemoveTagRequest struct {
	TagId uint32 `protobuf:"varint,1,opt,name=tagId" json:"tagId,omitempty"`
}

func (m *RemoveTagRequest) Reset()                    { *m = RemoveTagRequest{} }
func (m *RemoveTagRequest) String() string            { return proto.CompactTextString(m) }
func (*RemoveTagRequest) ProtoMessage()               {}
func (*RemoveTagRequest) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{9} }

func (m *RemoveTagRequest) GetTagId() uint32 {
	if m != nil {
		return m.TagId
	}
	return 0
}

type RemoveTagResponse struct {
	Success bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
}

func (m *RemoveTagResponse) Reset()                    { *m = RemoveTagResponse{} }
func (m *RemoveTagResponse) String() string            { return proto.CompactTextString(m) }
func (*RemoveTagResponse) ProtoMessage()               {}
func (*RemoveTagResponse) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{10} }

func (m *RemoveTagResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func init() {
	proto.RegisterType((*Tag)(nil), "SeppoService.Tag")
	proto.RegisterType((*TagsConnection)(nil), "SeppoService.TagsConnection")
	proto.RegisterType((*SearchTagsRequest)(nil), "SeppoService.SearchTagsRequest")
	proto.RegisterType((*FetchTagByIdRequest)(nil), "SeppoService.FetchTagByIdRequest")
	proto.RegisterType((*FetchTagByIdResponse)(nil), "SeppoService.FetchTagByIdResponse")
	proto.RegisterType((*CreateTagRequest)(nil), "SeppoService.CreateTagRequest")
	proto.RegisterType((*CreateTagResponse)(nil), "SeppoService.CreateTagResponse")
	proto.RegisterType((*UpdateTagRequest)(nil), "SeppoService.UpdateTagRequest")
	proto.RegisterType((*UpdateTagResponse)(nil), "SeppoService.UpdateTagResponse")
	proto.RegisterType((*RemoveTagRequest)(nil), "SeppoService.RemoveTagRequest")
	proto.RegisterType((*RemoveTagResponse)(nil), "SeppoService.RemoveTagResponse")
}

func init() { proto.RegisterFile("tag.proto", fileDescriptor12) }

var fileDescriptor12 = []byte{
	// 385 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x93, 0x4f, 0x0b, 0xd3, 0x40,
	0x10, 0xc5, 0x49, 0xd3, 0x3f, 0x76, 0x6a, 0x4b, 0xb3, 0x96, 0x92, 0x93, 0x84, 0x15, 0x4b, 0x3c,
	0xb4, 0x07, 0xbd, 0x78, 0xd0, 0x8b, 0x15, 0x21, 0xd7, 0x4d, 0xc5, 0xf3, 0x34, 0x99, 0xae, 0x01,
	0x93, 0x8d, 0xd9, 0x6d, 0xd1, 0xcf, 0xe4, 0x97, 0x94, 0x6c, 0x36, 0x90, 0x4a, 0x41, 0xbd, 0xe5,
	0xbd, 0x9d, 0x9d, 0xdf, 0x63, 0x76, 0x02, 0x73, 0x83, 0xf2, 0x50, 0x37, 0xca, 0x28, 0xf6, 0x34,
	0xa5, 0xba, 0x56, 0x29, 0x35, 0xb7, 0x22, 0x23, 0xfe, 0x0a, 0xfc, 0x13, 0x4a, 0xb6, 0x82, 0x51,
	0x91, 0x87, 0x5e, 0xe4, 0xc5, 0x4b, 0x31, 0x2a, 0x72, 0xc6, 0x60, 0x5c, 0x61, 0x49, 0xe1, 0x28,
	0xf2, 0xe2, 0xb9, 0xb0, 0xdf, 0x1c, 0x61, 0x75, 0x42, 0xa9, 0x8f, 0xaa, 0xaa, 0x28, 0x33, 0x85,
	0xaa, 0xd8, 0x4b, 0x18, 0x1b, 0x94, 0x3a, 0xf4, 0x22, 0x3f, 0x5e, 0xbc, 0x0e, 0x0e, 0xc3, 0xce,
	0x87, 0x13, 0x4a, 0x61, 0x8f, 0x59, 0x08, 0xb3, 0x12, 0x7f, 0xb4, 0x77, 0x6d, 0xbf, 0xa5, 0xe8,
	0xa5, 0xc3, 0xfa, 0x3d, 0x96, 0xff, 0xf2, 0x20, 0x48, 0x09, 0x9b, 0xec, 0x6b, 0x7b, 0x2c, 0xe8,
	0xfb, 0x95, 0xb4, 0x61, 0x3b, 0x58, 0x69, 0x55, 0xc9, 0x8f, 0x68, 0xf0, 0x8c, 0x9a, 0x92, 0x3e,
	0xe8, 0x1f, 0x2e, 0x8b, 0x60, 0x71, 0xc3, 0xa6, 0xc0, 0x36, 0x5b, 0x92, 0x3b, 0xd6, 0xd0, 0x62,
	0x5b, 0x98, 0xaa, 0xcb, 0x45, 0x93, 0x71, 0x4c, 0xa7, 0xd8, 0x06, 0x26, 0xdf, 0x8a, 0xb2, 0x30,
	0xe1, 0xd8, 0xda, 0x9d, 0x60, 0xcf, 0x01, 0xb4, 0x0d, 0xf3, 0x45, 0x35, 0x79, 0x38, 0xb1, 0xa3,
	0x18, 0x38, 0x7c, 0x0f, 0xcf, 0x3e, 0x91, 0xb1, 0x59, 0x3f, 0xfc, 0x4c, 0xf2, 0x3e, 0xee, 0x16,
	0xa6, 0x06, 0x65, 0x92, 0x77, 0x73, 0x59, 0x0a, 0xa7, 0xf8, 0x7b, 0xd8, 0xdc, 0x97, 0xeb, 0x5a,
	0x55, 0x9a, 0xfe, 0x71, 0x8a, 0x7c, 0x07, 0xeb, 0x63, 0x43, 0x68, 0xa8, 0xb5, 0x1c, 0xaa, 0x7f,
	0x26, 0x6f, 0xf0, 0x4c, 0x6f, 0x21, 0x18, 0xd4, 0x39, 0xc6, 0x0b, 0xf0, 0x0d, 0x4a, 0x5b, 0xf7,
	0x10, 0xd1, 0x9e, 0xf2, 0x77, 0xb0, 0xfe, 0x5c, 0xe7, 0xf7, 0x84, 0x0d, 0x4c, 0x6c, 0x7c, 0x37,
	0xf2, 0x4e, 0x3c, 0x5c, 0x0f, 0x01, 0xc1, 0xe0, 0xf6, 0x7f, 0x70, 0xdb, 0xfd, 0x48, 0xaf, 0x59,
	0x46, 0xba, 0xdb, 0x8f, 0x27, 0xa2, 0x97, 0x3c, 0x86, 0xb5, 0xa0, 0x52, 0xdd, 0xfe, 0x9a, 0x88,
	0xef, 0x21, 0x18, 0x54, 0x3a, 0x7a, 0x08, 0x33, 0xed, 0x1a, 0x7b, 0x5d, 0x63, 0x27, 0xcf, 0x53,
	0xfb, 0x2f, 0xbc, 0xf9, 0x1d, 0x00, 0x00, 0xff, 0xff, 0x6e, 0x65, 0xd6, 0x0e, 0x18, 0x03, 0x00,
	0x00,
}
