// Code generated by protoc-gen-go.
// source: variation.proto
// DO NOT EDIT!

package SeppoService

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Variation struct {
	Id      uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name    string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	SongId  uint32 `protobuf:"varint,3,opt,name=songId" json:"songId,omitempty"`
	Version uint64 `protobuf:"varint,5,opt,name=version" json:"version,omitempty"`
}

func (m *Variation) Reset()                    { *m = Variation{} }
func (m *Variation) String() string            { return proto.CompactTextString(m) }
func (*Variation) ProtoMessage()               {}
func (*Variation) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{0} }

func (m *Variation) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Variation) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Variation) GetSongId() uint32 {
	if m != nil {
		return m.SongId
	}
	return 0
}

func (m *Variation) GetVersion() uint64 {
	if m != nil {
		return m.Version
	}
	return 0
}

type CreateVariationRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Text string `protobuf:"bytes,2,opt,name=text" json:"text,omitempty"`
}

func (m *CreateVariationRequest) Reset()                    { *m = CreateVariationRequest{} }
func (m *CreateVariationRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateVariationRequest) ProtoMessage()               {}
func (*CreateVariationRequest) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{1} }

func (m *CreateVariationRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateVariationRequest) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

type CreateVariationResponse struct {
	Variation *Variation `protobuf:"bytes,1,opt,name=variation" json:"variation,omitempty"`
}

func (m *CreateVariationResponse) Reset()                    { *m = CreateVariationResponse{} }
func (m *CreateVariationResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateVariationResponse) ProtoMessage()               {}
func (*CreateVariationResponse) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{2} }

func (m *CreateVariationResponse) GetVariation() *Variation {
	if m != nil {
		return m.Variation
	}
	return nil
}

type EditVariationRequest struct {
	VariationId uint32 `protobuf:"varint,1,opt,name=variationId" json:"variationId,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Text        string `protobuf:"bytes,3,opt,name=text" json:"text,omitempty"`
	SongId      uint32 `protobuf:"varint,4,opt,name=songId" json:"songId,omitempty"`
	Version     uint64 `protobuf:"varint,5,opt,name=version" json:"version,omitempty"`
}

func (m *EditVariationRequest) Reset()                    { *m = EditVariationRequest{} }
func (m *EditVariationRequest) String() string            { return proto.CompactTextString(m) }
func (*EditVariationRequest) ProtoMessage()               {}
func (*EditVariationRequest) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{3} }

func (m *EditVariationRequest) GetVariationId() uint32 {
	if m != nil {
		return m.VariationId
	}
	return 0
}

func (m *EditVariationRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *EditVariationRequest) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *EditVariationRequest) GetSongId() uint32 {
	if m != nil {
		return m.SongId
	}
	return 0
}

func (m *EditVariationRequest) GetVersion() uint64 {
	if m != nil {
		return m.Version
	}
	return 0
}

type EditVariationResponse struct {
	Variation *Variation `protobuf:"bytes,1,opt,name=variation" json:"variation,omitempty"`
}

func (m *EditVariationResponse) Reset()                    { *m = EditVariationResponse{} }
func (m *EditVariationResponse) String() string            { return proto.CompactTextString(m) }
func (*EditVariationResponse) ProtoMessage()               {}
func (*EditVariationResponse) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{4} }

func (m *EditVariationResponse) GetVariation() *Variation {
	if m != nil {
		return m.Variation
	}
	return nil
}

type RemoveVariationRequest struct {
	VariationId uint32 `protobuf:"varint,1,opt,name=variationId" json:"variationId,omitempty"`
}

func (m *RemoveVariationRequest) Reset()                    { *m = RemoveVariationRequest{} }
func (m *RemoveVariationRequest) String() string            { return proto.CompactTextString(m) }
func (*RemoveVariationRequest) ProtoMessage()               {}
func (*RemoveVariationRequest) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{5} }

func (m *RemoveVariationRequest) GetVariationId() uint32 {
	if m != nil {
		return m.VariationId
	}
	return 0
}

type RemoveVariationResponse struct {
}

func (m *RemoveVariationResponse) Reset()                    { *m = RemoveVariationResponse{} }
func (m *RemoveVariationResponse) String() string            { return proto.CompactTextString(m) }
func (*RemoveVariationResponse) ProtoMessage()               {}
func (*RemoveVariationResponse) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{6} }

type FetchVariationByIdRequest struct {
	VariationIds []uint32 `protobuf:"varint,1,rep,packed,name=variationIds" json:"variationIds,omitempty"`
}

func (m *FetchVariationByIdRequest) Reset()                    { *m = FetchVariationByIdRequest{} }
func (m *FetchVariationByIdRequest) String() string            { return proto.CompactTextString(m) }
func (*FetchVariationByIdRequest) ProtoMessage()               {}
func (*FetchVariationByIdRequest) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{7} }

func (m *FetchVariationByIdRequest) GetVariationIds() []uint32 {
	if m != nil {
		return m.VariationIds
	}
	return nil
}

type FetchVariationByIdResponse struct {
	Variations []*Variation `protobuf:"bytes,1,rep,name=variations" json:"variations,omitempty"`
}

func (m *FetchVariationByIdResponse) Reset()                    { *m = FetchVariationByIdResponse{} }
func (m *FetchVariationByIdResponse) String() string            { return proto.CompactTextString(m) }
func (*FetchVariationByIdResponse) ProtoMessage()               {}
func (*FetchVariationByIdResponse) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{8} }

func (m *FetchVariationByIdResponse) GetVariations() []*Variation {
	if m != nil {
		return m.Variations
	}
	return nil
}

type SearchVariationsRequest struct {
	SearchWord           string `protobuf:"bytes,1,opt,name=searchWord" json:"searchWord,omitempty"`
	SongDatabaseId       uint32 `protobuf:"varint,2,opt,name=songDatabaseId" json:"songDatabaseId,omitempty"`
	SongDatabaseFilterId uint32 `protobuf:"varint,3,opt,name=songDatabaseFilterId" json:"songDatabaseFilterId,omitempty"`
}

func (m *SearchVariationsRequest) Reset()                    { *m = SearchVariationsRequest{} }
func (m *SearchVariationsRequest) String() string            { return proto.CompactTextString(m) }
func (*SearchVariationsRequest) ProtoMessage()               {}
func (*SearchVariationsRequest) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{9} }

func (m *SearchVariationsRequest) GetSearchWord() string {
	if m != nil {
		return m.SearchWord
	}
	return ""
}

func (m *SearchVariationsRequest) GetSongDatabaseId() uint32 {
	if m != nil {
		return m.SongDatabaseId
	}
	return 0
}

func (m *SearchVariationsRequest) GetSongDatabaseFilterId() uint32 {
	if m != nil {
		return m.SongDatabaseFilterId
	}
	return 0
}

type SearchVariationsResponse struct {
	Variations    []*Variation `protobuf:"bytes,1,rep,name=variations" json:"variations,omitempty"`
	MaxVariations uint32       `protobuf:"varint,2,opt,name=maxVariations" json:"maxVariations,omitempty"`
}

func (m *SearchVariationsResponse) Reset()                    { *m = SearchVariationsResponse{} }
func (m *SearchVariationsResponse) String() string            { return proto.CompactTextString(m) }
func (*SearchVariationsResponse) ProtoMessage()               {}
func (*SearchVariationsResponse) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{10} }

func (m *SearchVariationsResponse) GetVariations() []*Variation {
	if m != nil {
		return m.Variations
	}
	return nil
}

func (m *SearchVariationsResponse) GetMaxVariations() uint32 {
	if m != nil {
		return m.MaxVariations
	}
	return 0
}

func init() {
	proto.RegisterType((*Variation)(nil), "SeppoService.Variation")
	proto.RegisterType((*CreateVariationRequest)(nil), "SeppoService.CreateVariationRequest")
	proto.RegisterType((*CreateVariationResponse)(nil), "SeppoService.CreateVariationResponse")
	proto.RegisterType((*EditVariationRequest)(nil), "SeppoService.EditVariationRequest")
	proto.RegisterType((*EditVariationResponse)(nil), "SeppoService.EditVariationResponse")
	proto.RegisterType((*RemoveVariationRequest)(nil), "SeppoService.RemoveVariationRequest")
	proto.RegisterType((*RemoveVariationResponse)(nil), "SeppoService.RemoveVariationResponse")
	proto.RegisterType((*FetchVariationByIdRequest)(nil), "SeppoService.FetchVariationByIdRequest")
	proto.RegisterType((*FetchVariationByIdResponse)(nil), "SeppoService.FetchVariationByIdResponse")
	proto.RegisterType((*SearchVariationsRequest)(nil), "SeppoService.SearchVariationsRequest")
	proto.RegisterType((*SearchVariationsResponse)(nil), "SeppoService.SearchVariationsResponse")
}

func init() { proto.RegisterFile("variation.proto", fileDescriptor9) }

var fileDescriptor9 = []byte{
	// 389 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x53, 0x4d, 0x8b, 0xdb, 0x30,
	0x10, 0x45, 0x89, 0x9b, 0x92, 0x49, 0x9c, 0x82, 0x48, 0x63, 0xa7, 0x87, 0x62, 0x44, 0x29, 0x3e,
	0xe5, 0x90, 0x52, 0x0a, 0xbd, 0xb4, 0xf4, 0x23, 0xe0, 0x4b, 0x29, 0x0e, 0x6d, 0xcf, 0x4a, 0x3c,
	0x74, 0x05, 0x1b, 0xcb, 0x2b, 0x69, 0x4d, 0xf2, 0x37, 0x16, 0xf6, 0xff, 0x2e, 0x71, 0xfc, 0xa1,
	0xc4, 0x61, 0xd9, 0x25, 0x37, 0xe9, 0xcd, 0x9b, 0xa7, 0xf7, 0x46, 0x12, 0xbc, 0xca, 0xb9, 0x12,
	0xdc, 0x08, 0x99, 0xce, 0x32, 0x25, 0x8d, 0xa4, 0xc3, 0x25, 0x66, 0x99, 0x5c, 0xa2, 0xca, 0xc5,
	0x1a, 0x19, 0x87, 0xfe, 0xdf, 0x8a, 0x40, 0x47, 0xd0, 0x11, 0x89, 0x4f, 0x02, 0x12, 0xba, 0x71,
	0x47, 0x24, 0x94, 0x82, 0x93, 0xf2, 0x0d, 0xfa, 0x9d, 0x80, 0x84, 0xfd, 0xb8, 0x58, 0xd3, 0x09,
	0xf4, 0xb4, 0x4c, 0xff, 0x47, 0x89, 0xdf, 0x2d, 0x78, 0xe5, 0x8e, 0xfa, 0xf0, 0x32, 0x47, 0xa5,
	0x85, 0x4c, 0xfd, 0x17, 0x01, 0x09, 0x9d, 0xb8, 0xda, 0xb2, 0xaf, 0x30, 0xf9, 0xae, 0x90, 0x1b,
	0xac, 0x0f, 0x8a, 0xf1, 0xe6, 0x16, 0xb5, 0xa9, 0xf5, 0x89, 0xa5, 0x4f, 0xc1, 0x31, 0xb8, 0x35,
	0xd5, 0x99, 0xfb, 0x35, 0xfb, 0x0d, 0x5e, 0x4b, 0x41, 0x67, 0x32, 0xd5, 0x48, 0x3f, 0x42, 0xbf,
	0x0e, 0x58, 0xe8, 0x0c, 0xe6, 0xde, 0xcc, 0x4e, 0x38, 0x6b, 0x7a, 0x1a, 0x26, 0xbb, 0x23, 0x30,
	0xfe, 0x99, 0x08, 0xd3, 0xb2, 0x14, 0xc0, 0xa0, 0x66, 0x45, 0xd5, 0x2c, 0x6c, 0xe8, 0xec, 0x50,
	0x2a, 0xd3, 0xdd, 0xc6, 0xb4, 0x35, 0x28, 0xe7, 0x89, 0x83, 0xfa, 0x05, 0xaf, 0x4f, 0x3c, 0x5d,
	0x16, 0xf2, 0x33, 0x4c, 0x62, 0xdc, 0xc8, 0x1c, 0x9f, 0x9f, 0x92, 0x4d, 0xc1, 0x6b, 0xf5, 0x1e,
	0xdc, 0xb0, 0x2f, 0x30, 0x5d, 0xa0, 0x59, 0x5f, 0xd5, 0x95, 0x6f, 0xbb, 0x28, 0xa9, 0x94, 0x19,
	0x0c, 0x2d, 0x19, 0xed, 0x93, 0xa0, 0x1b, 0xba, 0xf1, 0x11, 0xc6, 0xfe, 0xc0, 0x9b, 0x73, 0x02,
	0x65, 0xd8, 0x4f, 0x00, 0x35, 0xfb, 0xd0, 0xff, 0x48, 0x5a, 0x8b, 0xca, 0xee, 0x09, 0x78, 0x4b,
	0xe4, 0xca, 0x12, 0xd6, 0x95, 0xad, 0xb7, 0x00, 0xba, 0x28, 0xfd, 0x93, 0x2a, 0x29, 0xdf, 0x9b,
	0x85, 0xd0, 0xf7, 0x30, 0xda, 0x5f, 0xcf, 0x0f, 0x6e, 0xf8, 0x8a, 0x6b, 0x8c, 0x92, 0xe2, 0x7a,
	0xdd, 0xf8, 0x04, 0xa5, 0x73, 0x18, 0xdb, 0xc8, 0x42, 0x5c, 0x1b, 0x54, 0xf5, 0x5f, 0x38, 0x5b,
	0x63, 0x3b, 0xf0, 0xdb, 0xb6, 0x2e, 0x0c, 0x4b, 0xdf, 0x81, 0xbb, 0xe1, 0xdb, 0x46, 0xb1, 0xf4,
	0x7b, 0x0c, 0xae, 0x7a, 0xc5, 0x97, 0xff, 0xf0, 0x10, 0x00, 0x00, 0xff, 0xff, 0x4d, 0xc6, 0xa4,
	0xa6, 0x05, 0x04, 0x00, 0x00,
}
