// Code generated by protoc-gen-go.
// source: song_database_variations.proto
// DO NOT EDIT!

package SeppoService

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type SongDatabaseVariation struct {
	Id             uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	SongDatabaseId uint32 `protobuf:"varint,2,opt,name=songDatabaseId" json:"songDatabaseId,omitempty"`
	VariationId    uint32 `protobuf:"varint,3,opt,name=variationId" json:"variationId,omitempty"`
}

func (m *SongDatabaseVariation) Reset()                    { *m = SongDatabaseVariation{} }
func (m *SongDatabaseVariation) String() string            { return proto.CompactTextString(m) }
func (*SongDatabaseVariation) ProtoMessage()               {}
func (*SongDatabaseVariation) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{0} }

func (m *SongDatabaseVariation) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *SongDatabaseVariation) GetSongDatabaseId() uint32 {
	if m != nil {
		return m.SongDatabaseId
	}
	return 0
}

func (m *SongDatabaseVariation) GetVariationId() uint32 {
	if m != nil {
		return m.VariationId
	}
	return 0
}

func init() {
	proto.RegisterType((*SongDatabaseVariation)(nil), "SeppoService.SongDatabaseVariation")
}

func init() { proto.RegisterFile("song_database_variations.proto", fileDescriptor6) }

var fileDescriptor6 = []byte{
	// 134 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x2b, 0xce, 0xcf, 0x4b,
	0x8f, 0x4f, 0x49, 0x2c, 0x49, 0x4c, 0x4a, 0x2c, 0x4e, 0x8d, 0x2f, 0x4b, 0x2c, 0xca, 0x4c, 0x2c,
	0xc9, 0xcc, 0xcf, 0x2b, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x09, 0x4e, 0x2d, 0x28,
	0xc8, 0x0f, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0x55, 0x2a, 0xe4, 0x12, 0x0d, 0xce, 0xcf, 0x4b,
	0x77, 0x81, 0x2a, 0x0f, 0x83, 0xa9, 0x16, 0xe2, 0xe3, 0x62, 0xca, 0x4c, 0x91, 0x60, 0x54, 0x60,
	0xd4, 0xe0, 0x0d, 0x62, 0xca, 0x4c, 0x11, 0x52, 0xe3, 0xe2, 0x2b, 0x46, 0x52, 0xe8, 0x99, 0x22,
	0xc1, 0x04, 0x96, 0x43, 0x13, 0x15, 0x52, 0xe0, 0xe2, 0x86, 0x5b, 0xe9, 0x99, 0x22, 0xc1, 0x0c,
	0x56, 0x84, 0x2c, 0x94, 0xc4, 0x06, 0x76, 0x87, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x0c, 0x57,
	0x7b, 0x50, 0xa9, 0x00, 0x00, 0x00,
}
