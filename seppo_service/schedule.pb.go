// Code generated by protoc-gen-go.
// source: schedule.proto
// DO NOT EDIT!

package SeppoService

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Schedule struct {
	Id    uint64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name  string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Start int64  `protobuf:"varint,3,opt,name=start" json:"start,omitempty"`
	End   int64  `protobuf:"varint,4,opt,name=end" json:"end,omitempty"`
}

func (m *Schedule) Reset()                    { *m = Schedule{} }
func (m *Schedule) String() string            { return proto.CompactTextString(m) }
func (*Schedule) ProtoMessage()               {}
func (*Schedule) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{0} }

func (m *Schedule) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Schedule) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Schedule) GetStart() int64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *Schedule) GetEnd() int64 {
	if m != nil {
		return m.End
	}
	return 0
}

type SearchSchedulesRequest struct {
	Offset uint32 `protobuf:"varint,1,opt,name=offset" json:"offset,omitempty"`
	Limit  uint32 `protobuf:"varint,2,opt,name=limit" json:"limit,omitempty"`
}

func (m *SearchSchedulesRequest) Reset()                    { *m = SearchSchedulesRequest{} }
func (m *SearchSchedulesRequest) String() string            { return proto.CompactTextString(m) }
func (*SearchSchedulesRequest) ProtoMessage()               {}
func (*SearchSchedulesRequest) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{1} }

func (m *SearchSchedulesRequest) GetOffset() uint32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *SearchSchedulesRequest) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type SearchSchedulesResponse struct {
	Schedules    []*Schedule `protobuf:"bytes,1,rep,name=schedules" json:"schedules,omitempty"`
	MaxSchedules uint64      `protobuf:"varint,2,opt,name=maxSchedules" json:"maxSchedules,omitempty"`
}

func (m *SearchSchedulesResponse) Reset()                    { *m = SearchSchedulesResponse{} }
func (m *SearchSchedulesResponse) String() string            { return proto.CompactTextString(m) }
func (*SearchSchedulesResponse) ProtoMessage()               {}
func (*SearchSchedulesResponse) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{2} }

func (m *SearchSchedulesResponse) GetSchedules() []*Schedule {
	if m != nil {
		return m.Schedules
	}
	return nil
}

func (m *SearchSchedulesResponse) GetMaxSchedules() uint64 {
	if m != nil {
		return m.MaxSchedules
	}
	return 0
}

type FetchScheduleByIdRequest struct {
	ScheduleIds []uint64 `protobuf:"varint,1,rep,packed,name=scheduleIds" json:"scheduleIds,omitempty"`
}

func (m *FetchScheduleByIdRequest) Reset()                    { *m = FetchScheduleByIdRequest{} }
func (m *FetchScheduleByIdRequest) String() string            { return proto.CompactTextString(m) }
func (*FetchScheduleByIdRequest) ProtoMessage()               {}
func (*FetchScheduleByIdRequest) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{3} }

func (m *FetchScheduleByIdRequest) GetScheduleIds() []uint64 {
	if m != nil {
		return m.ScheduleIds
	}
	return nil
}

type FetchScheduleByIdResponse struct {
	Schedules []*Schedule `protobuf:"bytes,1,rep,name=schedules" json:"schedules,omitempty"`
}

func (m *FetchScheduleByIdResponse) Reset()                    { *m = FetchScheduleByIdResponse{} }
func (m *FetchScheduleByIdResponse) String() string            { return proto.CompactTextString(m) }
func (*FetchScheduleByIdResponse) ProtoMessage()               {}
func (*FetchScheduleByIdResponse) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{4} }

func (m *FetchScheduleByIdResponse) GetSchedules() []*Schedule {
	if m != nil {
		return m.Schedules
	}
	return nil
}

type CreateScheduleRequest struct {
	Name  string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Start int64  `protobuf:"varint,2,opt,name=start" json:"start,omitempty"`
	End   int64  `protobuf:"varint,3,opt,name=end" json:"end,omitempty"`
}

func (m *CreateScheduleRequest) Reset()                    { *m = CreateScheduleRequest{} }
func (m *CreateScheduleRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateScheduleRequest) ProtoMessage()               {}
func (*CreateScheduleRequest) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{5} }

func (m *CreateScheduleRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateScheduleRequest) GetStart() int64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *CreateScheduleRequest) GetEnd() int64 {
	if m != nil {
		return m.End
	}
	return 0
}

type CreateScheduleResponse struct {
	Schedule *Schedule `protobuf:"bytes,1,opt,name=schedule" json:"schedule,omitempty"`
}

func (m *CreateScheduleResponse) Reset()                    { *m = CreateScheduleResponse{} }
func (m *CreateScheduleResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateScheduleResponse) ProtoMessage()               {}
func (*CreateScheduleResponse) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{6} }

func (m *CreateScheduleResponse) GetSchedule() *Schedule {
	if m != nil {
		return m.Schedule
	}
	return nil
}

type UpdateScheduleRequest struct {
	ScheduleId     uint64            `protobuf:"varint,1,opt,name=scheduleId" json:"scheduleId,omitempty"`
	Name           string            `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	AddSongIds     []uint64          `protobuf:"varint,3,rep,packed,name=addSongIds" json:"addSongIds,omitempty"`
	RemoveSongIds  []uint64          `protobuf:"varint,4,rep,packed,name=removeSongIds" json:"removeSongIds,omitempty"`
	ChangeOrderIds map[uint64]uint64 `protobuf:"bytes,5,rep,name=changeOrderIds" json:"changeOrderIds,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
}

func (m *UpdateScheduleRequest) Reset()                    { *m = UpdateScheduleRequest{} }
func (m *UpdateScheduleRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateScheduleRequest) ProtoMessage()               {}
func (*UpdateScheduleRequest) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{7} }

func (m *UpdateScheduleRequest) GetScheduleId() uint64 {
	if m != nil {
		return m.ScheduleId
	}
	return 0
}

func (m *UpdateScheduleRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateScheduleRequest) GetAddSongIds() []uint64 {
	if m != nil {
		return m.AddSongIds
	}
	return nil
}

func (m *UpdateScheduleRequest) GetRemoveSongIds() []uint64 {
	if m != nil {
		return m.RemoveSongIds
	}
	return nil
}

func (m *UpdateScheduleRequest) GetChangeOrderIds() map[uint64]uint64 {
	if m != nil {
		return m.ChangeOrderIds
	}
	return nil
}

type UpdateScheduleResponse struct {
	Schedule *Schedule `protobuf:"bytes,1,opt,name=schedule" json:"schedule,omitempty"`
	Success  bool      `protobuf:"varint,2,opt,name=success" json:"success,omitempty"`
}

func (m *UpdateScheduleResponse) Reset()                    { *m = UpdateScheduleResponse{} }
func (m *UpdateScheduleResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateScheduleResponse) ProtoMessage()               {}
func (*UpdateScheduleResponse) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{8} }

func (m *UpdateScheduleResponse) GetSchedule() *Schedule {
	if m != nil {
		return m.Schedule
	}
	return nil
}

func (m *UpdateScheduleResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type RemoveScheduleRequest struct {
	ScheduleId uint64 `protobuf:"varint,1,opt,name=scheduleId" json:"scheduleId,omitempty"`
}

func (m *RemoveScheduleRequest) Reset()                    { *m = RemoveScheduleRequest{} }
func (m *RemoveScheduleRequest) String() string            { return proto.CompactTextString(m) }
func (*RemoveScheduleRequest) ProtoMessage()               {}
func (*RemoveScheduleRequest) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{9} }

func (m *RemoveScheduleRequest) GetScheduleId() uint64 {
	if m != nil {
		return m.ScheduleId
	}
	return 0
}

type RemoveScheduleResponse struct {
	Success bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
}

func (m *RemoveScheduleResponse) Reset()                    { *m = RemoveScheduleResponse{} }
func (m *RemoveScheduleResponse) String() string            { return proto.CompactTextString(m) }
func (*RemoveScheduleResponse) ProtoMessage()               {}
func (*RemoveScheduleResponse) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{10} }

func (m *RemoveScheduleResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func init() {
	proto.RegisterType((*Schedule)(nil), "SeppoService.Schedule")
	proto.RegisterType((*SearchSchedulesRequest)(nil), "SeppoService.SearchSchedulesRequest")
	proto.RegisterType((*SearchSchedulesResponse)(nil), "SeppoService.SearchSchedulesResponse")
	proto.RegisterType((*FetchScheduleByIdRequest)(nil), "SeppoService.FetchScheduleByIdRequest")
	proto.RegisterType((*FetchScheduleByIdResponse)(nil), "SeppoService.FetchScheduleByIdResponse")
	proto.RegisterType((*CreateScheduleRequest)(nil), "SeppoService.CreateScheduleRequest")
	proto.RegisterType((*CreateScheduleResponse)(nil), "SeppoService.CreateScheduleResponse")
	proto.RegisterType((*UpdateScheduleRequest)(nil), "SeppoService.UpdateScheduleRequest")
	proto.RegisterType((*UpdateScheduleResponse)(nil), "SeppoService.UpdateScheduleResponse")
	proto.RegisterType((*RemoveScheduleRequest)(nil), "SeppoService.RemoveScheduleRequest")
	proto.RegisterType((*RemoveScheduleResponse)(nil), "SeppoService.RemoveScheduleResponse")
}

func init() { proto.RegisterFile("schedule.proto", fileDescriptor6) }

var fileDescriptor6 = []byte{
	// 457 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x54, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0x95, 0x3f, 0x5a, 0xd2, 0x69, 0x13, 0xa1, 0x85, 0x18, 0xc3, 0xa1, 0xb2, 0x56, 0x1c, 0x72,
	0xca, 0x21, 0x20, 0x15, 0x21, 0x2e, 0x50, 0x51, 0xa9, 0x12, 0x12, 0x62, 0x2d, 0xb8, 0xa2, 0xc5,
	0x3b, 0x69, 0x2c, 0x12, 0xdb, 0xec, 0x6e, 0x22, 0xf2, 0xc3, 0xf8, 0x7f, 0xc8, 0xeb, 0xdd, 0xc4,
	0x36, 0xe6, 0x00, 0xbd, 0xed, 0x8c, 0x67, 0xde, 0x7b, 0x33, 0x6f, 0x64, 0x98, 0xa8, 0x6c, 0x85,
	0x62, 0xbb, 0xc6, 0x79, 0x25, 0x4b, 0x5d, 0x92, 0x8b, 0x14, 0xab, 0xaa, 0x4c, 0x51, 0xee, 0xf2,
	0x0c, 0xe9, 0x17, 0x18, 0xa5, 0xf6, 0x3b, 0x99, 0x80, 0x9f, 0x8b, 0xd8, 0x4b, 0xbc, 0x59, 0xc8,
	0xfc, 0x5c, 0x10, 0x02, 0x61, 0xc1, 0x37, 0x18, 0xfb, 0x89, 0x37, 0x3b, 0x63, 0xe6, 0x4d, 0x1e,
	0xc3, 0x89, 0xd2, 0x5c, 0xea, 0x38, 0x48, 0xbc, 0x59, 0xc0, 0x9a, 0x80, 0x3c, 0x84, 0x00, 0x0b,
	0x11, 0x87, 0x26, 0x57, 0x3f, 0xe9, 0x0d, 0x44, 0x29, 0x72, 0x99, 0xad, 0x1c, 0xba, 0x62, 0xf8,
	0x63, 0x8b, 0x4a, 0x93, 0x08, 0x4e, 0xcb, 0xe5, 0x52, 0xa1, 0x36, 0x4c, 0x63, 0x66, 0xa3, 0x1a,
	0x79, 0x9d, 0x6f, 0x72, 0x6d, 0xe8, 0xc6, 0xac, 0x09, 0xa8, 0x82, 0x27, 0x7f, 0xe0, 0xa8, 0xaa,
	0x2c, 0x14, 0x92, 0x97, 0x70, 0xe6, 0x46, 0x53, 0xb1, 0x97, 0x04, 0xb3, 0xf3, 0x45, 0x34, 0x6f,
	0x0f, 0x37, 0x77, 0x3d, 0xec, 0x58, 0x48, 0x28, 0x5c, 0x6c, 0xf8, 0xcf, 0x03, 0x9a, 0x61, 0x0b,
	0x59, 0x27, 0x47, 0xdf, 0x40, 0x7c, 0x83, 0xfa, 0xc8, 0xf9, 0x6e, 0x7f, 0x2b, 0x9c, 0xfc, 0x04,
	0xce, 0x1d, 0xd8, 0xad, 0x68, 0x78, 0x43, 0xd6, 0x4e, 0xd1, 0x4f, 0xf0, 0x74, 0xa0, 0xfb, 0x3e,
	0xa2, 0x69, 0x0a, 0xd3, 0x6b, 0x89, 0x5c, 0xe3, 0xe1, 0xa3, 0x55, 0xe3, 0x2c, 0xf2, 0x86, 0x2c,
	0xf2, 0x07, 0x2c, 0x0a, 0x8e, 0x16, 0x7d, 0x80, 0xa8, 0x0f, 0x6a, 0x45, 0x2e, 0x60, 0xe4, 0xb8,
	0x0d, 0xf2, 0xdf, 0x35, 0x1e, 0xea, 0xe8, 0x2f, 0x1f, 0xa6, 0x9f, 0x2b, 0x31, 0xa0, 0xf1, 0x12,
	0xe0, 0xb8, 0x1e, 0x7b, 0x5e, 0xad, 0xcc, 0xe0, 0x99, 0x5d, 0x02, 0x70, 0x21, 0xd2, 0xb2, 0xb8,
	0xab, 0x97, 0x1c, 0x98, 0x25, 0xb7, 0x32, 0xe4, 0x39, 0x8c, 0x25, 0x6e, 0xca, 0x1d, 0xba, 0x92,
	0xd0, 0x94, 0x74, 0x93, 0xe4, 0x2b, 0x4c, 0xb2, 0x15, 0x2f, 0xee, 0xf0, 0xa3, 0x14, 0x28, 0xeb,
	0xb2, 0x13, 0xb3, 0xf1, 0xab, 0xee, 0x34, 0x83, 0xb2, 0xe7, 0xd7, 0x9d, 0xce, 0xf7, 0x85, 0x96,
	0x7b, 0xd6, 0x83, 0x7b, 0xf6, 0x16, 0x1e, 0x0d, 0x94, 0xd5, 0xbb, 0xfe, 0x8e, 0x7b, 0x3b, 0x6a,
	0xfd, 0xac, 0x3d, 0xd9, 0xf1, 0xf5, 0x16, 0xed, 0xb9, 0x35, 0xc1, 0x6b, 0xff, 0x95, 0x47, 0x97,
	0x10, 0xf5, 0xf9, 0xff, 0xdf, 0x05, 0x12, 0xc3, 0x03, 0xb5, 0xcd, 0x32, 0x54, 0xcd, 0x61, 0x8f,
	0x98, 0x0b, 0xe9, 0x15, 0x4c, 0x59, 0xb3, 0x9c, 0x7f, 0xb3, 0x87, 0x2e, 0x20, 0xea, 0x37, 0x5a,
	0x81, 0x2d, 0x32, 0xaf, 0x43, 0xf6, 0xed, 0xd4, 0xfc, 0x6a, 0x5e, 0xfc, 0x0e, 0x00, 0x00, 0xff,
	0xff, 0x18, 0x44, 0x73, 0x82, 0x7c, 0x04, 0x00, 0x00,
}
